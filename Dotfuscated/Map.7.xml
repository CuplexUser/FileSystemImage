<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dotfuscatorMap SYSTEM "http://www.preemptive.com/dotfuscator/dtd/dotfuscatorMap_v1.2.dtd">
<dotfuscatorMap version="1.1">
    <header>
        <timestamp>2015-06-13T19:11:16</timestamp>
        <product version="4.17.0.2685" user="Martin Dahl" serial="179599-EVA-08074580-1861A89F-DF09CF38-9322E5F3">Dotfuscator Professional Edition EVALUATION</product>
    </header>
    <mapping>
        <module>
            <name>FileSystemImage.exe</name>
            <type>
                <name>FileSystemImage.DataModels.FileSystemFileWrapper</name>
                <methodlist>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemFile)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.DataModels.FileSystemFileWrapper(FileSystemImage.FileSystem.FileSystemFile)</signature>
                        <name>ConvertObject</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Attributes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CreateDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FilePath</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemFile</signature>
                        <name>_fileSystemFile</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Attributes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CreateDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FilePath</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ModifiedDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileDataReturnCallback</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(FileSystemImage.FileSystem.FileSystemDrive, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileSystemDirectory</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreateDate</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;()</signature>
                        <name>get_DirectoryList</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;()</signature>
                        <name>get_FileList</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSizeTotal</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FilesTotal</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_SubDirAccessDenied</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_SubDirectoriesTotal</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreateDate</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;)</signature>
                        <name>set_DirectoryList</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;)</signature>
                        <name>set_FileList</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSizeTotal</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FilesTotal</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_SubDirAccessDenied</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_SubDirectoriesTotal</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreateDate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;</signature>
                        <name>&lt;DirectoryList&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;</signature>
                        <name>&lt;FileList&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileSizeTotal&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FilesTotal&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ModifiedDate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;SubDirAccessDenied&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;SubDirectoriesTotal&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreateDate</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;()</signature>
                        <name>DirectoryList</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;()</signature>
                        <name>FileList</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSizeTotal</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FilesTotal</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ModifiedDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>SubDirAccessDenied</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>SubDirectoriesTotal</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileSystemDrive</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;()</signature>
                        <name>get_DirectoryList</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_DriveLetter</name>
                    </method>
                    <method>
                        <signature>System.IO.DriveType()</signature>
                        <name>get_DriveType</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FreeSpace</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;()</signature>
                        <name>get_RootFileList</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalSpace</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VolumeLabel</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;)</signature>
                        <name>set_DirectoryList</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_DriveLetter</name>
                    </method>
                    <method>
                        <signature>void(System.IO.DriveType)</signature>
                        <name>set_DriveType</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FreeSpace</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;)</signature>
                        <name>set_RootFileList</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_TotalSpace</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VolumeLabel</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;</signature>
                        <name>&lt;DirectoryList&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;DriveLetter&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.IO.DriveType</signature>
                        <name>&lt;DriveType&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FreeSpace&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;</signature>
                        <name>&lt;RootFileList&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;TotalSpace&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VolumeLabel&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemDirectory&gt;()</signature>
                        <name>DirectoryList</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>DriveLetter</name>
                    </property>
                    <property>
                        <signature>System.IO.DriveType()</signature>
                        <name>DriveType</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FreeSpace</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileSystem.FileSystemFile&gt;()</signature>
                        <name>RootFileList</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalSpace</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VolumeLabel</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileSystemFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreateDate</name>
                    </method>
                    <method>
                        <signature>System.IO.FileAttributes()</signature>
                        <name>get_FileAttributes</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullName</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessDate</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreateDate</name>
                    </method>
                    <method>
                        <signature>void(System.IO.FileAttributes)</signature>
                        <name>set_FileAttributes</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullName</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessDate</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreateDate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.IO.FileAttributes</signature>
                        <name>&lt;FileAttributes&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FullName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessDate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ModifiedDate&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreateDate</name>
                    </property>
                    <property>
                        <signature>System.IO.FileAttributes()</signature>
                        <name>FileAttributes</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullName</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastAccessDate</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ModifiedDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileTreeSummaryInfo</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>FileSizeTotal</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>FilesTotal</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>SubDirectoriesTotal</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileUtils</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>CancelCreateFileSystemDriveData</name>
                    </method>
                    <method>
                        <signature>bool(string, FileSystemImage.FileSystem.ProgressCallback, FileSystemImage.FileSystem.FileDataReturnCallback)</signature>
                        <name>CreateFileSystemDriveData</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>DeAllocateWorkerThread</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive(FileSystemImage.FileSystem.FileSystemDrive, FileSystemImage.FileSystem.FileSystemDirectory)</signature>
                        <name>UpdateFolder</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;FileSystemImage.FileSystem.FileSystemDrive&gt;(FileSystemImage.FileSystem.FileSystemDrive, FileSystemImage.FileSystem.FileSystemDirectory, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>UpdateFolderAsync</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRunning</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileUtils/FileSystemWorker</signature>
                        <name>_fileSystemWorker</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRunning</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileUtils/&lt;&gt;c__DisplayClass1</name>
                <newname>FileSystemImage.FileSystem.FileUtils/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive()</signature>
                        <name>&lt;UpdateFolderAsync&gt;b__0</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>fileSystemDrive</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDirectory</signature>
                        <name>targetDirectory</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileUtils/&lt;UpdateFolderAsync&gt;d__3</name>
                <newname>FileSystemImage.FileSystem.FileUtils/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;FileSystemImage.FileSystem.FileSystemDrive&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;FileSystemImage.FileSystem.FileSystemDrive&gt;</signature>
                        <name>&lt;&gt;u__$awaiter4</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileUtils/&lt;&gt;c__DisplayClass1</signature>
                        <name>CS$&lt;&gt;8__locals2</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>fileSystemDrive</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDirectory</signature>
                        <name>targetDirectory</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileUtils/FileSystemWorker</name>
                <newname>FileSystemImage.FileSystem.FileUtils/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(string, FileSystemImage.FileSystem.ProgressCallback, FileSystemImage.FileSystem.FileDataReturnCallback)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DirectoryInfo)</signature>
                        <name>&lt;GetFileSystemDirectory&gt;b__e</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(System.IO.DirectoryInfo, int32, int32)</signature>
                        <name>GetDirectoryCount</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileSystem.FileSystemDirectory(System.IO.DirectoryInfo, int32, int32)</signature>
                        <name>GetFileSystemDirectory</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                        <newname>e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Stop</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ThMain</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ThProgressMonitor</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_TaskIsRunning</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_TaskIsRunning</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;TaskIsRunning&gt;k__BackingField</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.IO.DirectoryInfo,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegatef</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_THREADS</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PROGRESS_UPDATE_INTERVAL</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_currentProgress</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_driveName</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileDataReturnCallback</signature>
                        <name>_fileDataReturnCallback</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>float64</signature>
                        <name>_maxProgress</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.ProgressCallback</signature>
                        <name>_progressCallback</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>_progressMonitorThread</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_runThMain</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>_workerThread</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ManualResetEvent</signature>
                        <name>progressManualResetEvent</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_n</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>TaskIsRunning</name>
                        <newname>eval_a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileUtils/FileSystemWorker/&lt;&gt;c__DisplayClass8</name>
                <newname>FileSystemImage.FileSystem.FileUtils/eval_a/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileUtils/FileSystemWorker</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>fileSystemDrive</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.FileUtils/FileSystemWorker/&lt;&gt;c__DisplayClassa</name>
                <newname>FileSystemImage.FileSystem.FileUtils/eval_a/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;ThMain&gt;b__7</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileUtils/FileSystemWorker/&lt;&gt;c__DisplayClass8</signature>
                        <name>CS$&lt;&gt;8__locals9</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.IO.DirectoryInfo</signature>
                        <name>dir</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileSystem.ProgressCallback</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(float64, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileTree.FileAlocationTable</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64(FileSystemImage.FileTree.TreeNode)</signature>
                        <name>AddTreeNode</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>RemoveTreeNode</name>
                    </method>
                    <method>
                        <signature>System.Collections.Hashtable()</signature>
                        <name>get_FileRecords</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Hashtable)</signature>
                        <name>set_FileRecords</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Hashtable</signature>
                        <name>&lt;FileRecords&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>cursor</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Hashtable()</signature>
                        <name>FileRecords</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileTree.FileSystemTree</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileTree.FileSystemTree(unsigned int8[])</signature>
                        <name>RestoreInstance</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToArray</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileTree.FileAlocationTable()</signature>
                        <name>get_FileRecords</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileTree.TreeNode()</signature>
                        <name>get_Root</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileTree.FileAlocationTable</signature>
                        <name>_fileAlocationTable</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileTree.TreeNode</signature>
                        <name>root</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FileSystemImage.FileTree.FileAlocationTable()</signature>
                        <name>FileRecords</name>
                    </property>
                    <property>
                        <signature>FileSystemImage.FileTree.TreeNode()</signature>
                        <name>Root</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileTree.TreeNode</name>
                <methodlist>
                    <method>
                        <signature>void(bool, string, int64, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileTree.TreeNode, FileSystemImage.FileTree.FileAlocationTable)</signature>
                        <name>AddChild</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PopulateChildNodes</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;int64&gt;()</signature>
                        <name>get_Children</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreateDate</name>
                    </method>
                    <method>
                        <signature>System.IO.FileAttributes()</signature>
                        <name>get_FileAttributes</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsFile</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Key</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ModifiedDate</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Parent</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreateDate</name>
                    </method>
                    <method>
                        <signature>void(System.IO.FileAttributes)</signature>
                        <name>set_FileAttributes</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_IsFile</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ModifiedDate</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreateDate&gt;k__BackingField</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.IO.FileAttributes</signature>
                        <name>&lt;FileAttributes&gt;k__BackingField</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileSize&gt;k__BackingField</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;IsFile&gt;k__BackingField</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ModifiedDate&gt;k__BackingField</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;int64&gt;</signature>
                        <name>_children</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>key</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>name</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>parent</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_j</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;int64&gt;()</signature>
                        <name>Children</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreateDate</name>
                    </property>
                    <property>
                        <signature>System.IO.FileAttributes()</signature>
                        <name>FileAttributes</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsFile</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Key</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ModifiedDate</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Parent</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileTree.TreeSearch</name>
                <methodlist>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileTree.TreeSearchResult&gt;(string, bool, bool)</signature>
                        <name>Search</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.FileTree.TreeSearchResult&gt;(string, FileSystemImage.FileSystem.FileSystemDirectory, string)</signature>
                        <name>_search</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>driveLetter</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ignoreCase</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>regularExpression</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDirectory</signature>
                        <name>root</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FileTree.TreeSearchResult</name>
                <methodlist>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemFile, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileSystem.FileSystemFile()</signature>
                        <name>get_file</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_path</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemFile)</signature>
                        <name>set_file</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_path</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemFile</signature>
                        <name>&lt;file&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;path&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FileSystemImage.FileSystem.FileSystemFile()</signature>
                        <name>file</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>path</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FormAboutBox</name>
                <newname>eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCompany</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyCopyright</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyDescription</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyProduct</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyTitle</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AssemblyVersion</name>
                        <newname>eval_i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelCompanyName</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelCopyright</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelProductName</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>labelVersion</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>logoPictureBox</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>okButton</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TableLayoutPanel</signature>
                        <name>tableLayoutPanel</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>textBoxDescription</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyCompany</name>
                        <newname>eval_f</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyCopyright</name>
                        <newname>eval_e</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyDescription</name>
                        <newname>eval_c</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyProduct</name>
                        <newname>eval_d</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyTitle</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>AssemblyVersion</name>
                        <newname>eval_b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.Storage.Models.StorageManagerProgress)</signature>
                        <name>&lt;DoPartialTreeUpdateAsync&gt;b__21</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int64(FileSystemImage.FileSystem.FileSystemFile)</signature>
                        <name>&lt;GetRootDirectoryData&gt;b__1f</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;HandleSaveFileComplete&gt;b__9</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.Storage.Models.StorageManagerProgress)</signature>
                        <name>&lt;LoadFileSystemImageFromFile&gt;b__0</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.Storage.Models.StorageManagerProgress)</signature>
                        <name>&lt;SaveFileSystemImageToFile&gt;b__f</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Hashing.ChecksumProgress)</signature>
                        <name>&lt;createMD5FileToolStripMenuItem_Click&gt;b__2d</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Hashing.ChecksumProgress)</signature>
                        <name>&lt;createSFVFileToolStripMenuItem_Click&gt;b__2c</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDirectory)</signature>
                        <name>DoPartialTreeUpdateAsync</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.MouseEventArgs)</signature>
                        <name>FileListDataGridView_MouseUp</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewRowPostPaintEventArgs)</signature>
                        <name>FileListDataGridView_RowPostPaint</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.DataGridViewRowPrePaintEventArgs)</signature>
                        <name>FileListDataGridView_RowPrePaint</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>FolderTreeView_AfterExpand</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewEventArgs)</signature>
                        <name>FolderTreeView_AfterSelect</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.TreeViewCancelEventArgs)</signature>
                        <name>FolderTreeView_BeforeExpand</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(FileSystemImage.FileSystem.FileSystemDirectory)</signature>
                        <name>GetFileSystemDirectoryData</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>FileSystemImage.FileSystem.FileSystemDirectory(string)</signature>
                        <name>GetFileSystemDirectoryFromPath</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;FileSystemImage.DataModels.FileSystemFileWrapper&gt;(System.Windows.Forms.TreeNode, bool)</signature>
                        <name>GetFileSystemFileListFromNode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>GetRootDirectoryData</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>HandleOpenFileComplete</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs)</signature>
                        <name>HandleSaveFileComplete</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitFileListDataGridView</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>LoadFileSystemDrive</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>LoadFileSystemImageFromFile</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ResetLoadAndSaveProgress</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive, string, string)</signature>
                        <name>SaveFileSystemImageToFile</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>aboutToolStripMenuItem_Click</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>string(System.Windows.Forms.TreeNode)</signature>
                        <name>buildPathFromTreeNode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>clearToolStripMenuItem_Click</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>copyFileMenuItem_Click</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>copyFilePathMenuItem_Click</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>createMD5FileToolStripMenuItem_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>createSFVFileToolStripMenuItem_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>driveInfoToolStripMenuItem_Click</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>exitToolStripMenuItem_Click</name>
                        <newname>eval_o</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>frmMain_Load</name>
                        <newname>eval_p</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>newToolStripMenuItem_Click</name>
                        <newname>eval_n</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>openToolStripMenuItem_Click</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>saveAsToolStripMenuItem_Click</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>saveToolStripMenuItem_Click</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>searchToolStripMenuItem_Click</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>selectAllMenuItem_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>updateToolStripMenuItem_Click</name>
                        <newname>eval_h</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>Attributes</name>
                        <newname>eval_aj</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;FileSystemImage.FileSystem.FileSystemFile,int64&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate20</name>
                        <newname>eval_a6</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CUSTOM_CONTENT_HEIGHT</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripStatusLabel</signature>
                        <name>ChecksumFileGenerationLabel</name>
                        <newname>eval_a3</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripStatusLabel</signature>
                        <name>DirectoryInfoDataLabel</name>
                        <newname>eval_al</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridView</signature>
                        <name>FileListDataGridView</name>
                        <newname>eval_ae</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TreeView</signature>
                        <name>FolderTreeView</name>
                        <newname>eval_ad</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>GridViewSelectionBorderColor</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripProgressBar</signature>
                        <name>LoadAndSaveProgressBar</name>
                        <newname>eval_an</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripStatusLabel</signature>
                        <name>LoadAndSaveProgressInfoLabel</name>
                        <newname>eval_am</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>MainContentPanel</name>
                        <newname>eval_ab</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.MenuStrip</signature>
                        <name>MainMenu</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_currentFileName</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>_currentFileSystemDrive</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>aboutToolStripMenuItem</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>clearToolStripMenuItem</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ContextMenuStrip</signature>
                        <name>contextMenuStripFile</name>
                        <newname>eval_as</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyFileMenuItem</name>
                        <newname>eval_ao</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyFilePathMenuItem</name>
                        <newname>eval_ap</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>copyFileToolStripMenuItem</name>
                        <newname>eval_aq</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>copyToolStripMenuItem</name>
                        <newname>eval_au</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>createDateDataGridViewTextBoxColumn</name>
                        <newname>eval_ai</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>createMD5FileToolStripMenuItem</name>
                        <newname>eval_a0</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>createSFVFileToolStripMenuItem</name>
                        <newname>eval_az</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>cutToolStripMenuItem</name>
                        <newname>eval_at</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>deleteToolStripMenuItem</name>
                        <newname>eval_a2</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>driveInfoToolStripMenuItem</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>editToolStripMenuItem</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>exitToolStripMenuItem</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>fileSizeDataGridViewTextBoxColumn</name>
                        <newname>eval_ag</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.BindingSource</signature>
                        <name>fileSystemFileWrapperBindingSource</name>
                        <newname>eval_aa</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>fileToolStripMenuItem</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>gridViewGradientBackgroundColorStart</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Color</signature>
                        <name>gridViewGradientBackgroundColorStop</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>helpToolStripMenuItem</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ImageList</signature>
                        <name>imgIconImgList</name>
                        <newname>eval_z</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>modifiedDateDataGridViewTextBoxColumn</name>
                        <newname>eval_ah</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.DataGridViewTextBoxColumn</signature>
                        <name>nameDataGridViewTextBoxColumn</name>
                        <newname>eval_af</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>newToolStripMenuItem</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.OpenFileDialog</signature>
                        <name>openFileDialog1</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>openToolStripMenuItem</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>pasteToolStripMenuItem</name>
                        <newname>eval_av</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a7</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>renameToolStripMenuItem</name>
                        <newname>eval_ax</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>saveAsToolStripMenuItem</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SaveFileDialog</signature>
                        <name>saveFileDialog1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>saveToolStripMenuItem</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>searchToolStripMenuItem</name>
                        <newname>eval_y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>selectAllMenuItem</name>
                        <newname>eval_ar</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.SplitContainer</signature>
                        <name>splitContainer1</name>
                        <newname>eval_ac</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.StatusStrip</signature>
                        <name>statusStrip1</name>
                        <newname>eval_ak</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem1</name>
                        <newname>eval_aw</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem2</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem3</name>
                        <newname>eval_v</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem4</name>
                        <newname>eval_ay</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripMenuItem5</name>
                        <newname>eval_a1</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripSeparator</signature>
                        <name>toolStripSeparator1</name>
                        <newname>eval_a5</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>toolsToolStripMenuItem</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripMenuItem</signature>
                        <name>updateToolStripMenuItem</name>
                        <newname>eval_a4</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&lt;HandleSaveFileComplete&gt;b__9&gt;d__a</name>
                <newname>FileSystemImage.FrmMain/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FrmMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter</signature>
                        <name>&lt;&gt;u__$awaiterb</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass11</name>
                <newname>FileSystemImage.FrmMain/eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;SaveFileSystemImageToFile&gt;b__10</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FrmMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>fileSystemDrive</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>password</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Progress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>storageManagerProgress</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass11/&lt;&lt;SaveFileSystemImageToFile&gt;b__10&gt;d__13</name>
                <newname>FileSystemImage.FrmMain/eval_d/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass11</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__$awaiter19</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.SaveFileEventHandler</signature>
                        <name>&lt;onSaveComplete&gt;5__18</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.OutcomeEventArgs</signature>
                        <name>&lt;outcomeEventArgs&gt;5__17</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.StorageManagerSettings</signature>
                        <name>&lt;settings&gt;5__14</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;storageManager&gt;5__15</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;success&gt;5__16</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass1d</name>
                <newname>FileSystemImage.FrmMain/eval_e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(FileSystemImage.FileSystem.FileSystemDirectory)</signature>
                        <name>&lt;FolderTreeView_AfterExpand&gt;b__1b</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.TreeNode</signature>
                        <name>firstNode</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass2</name>
                <newname>FileSystemImage.FrmMain/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;LoadFileSystemImageFromFile&gt;b__1</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FrmMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>password</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Progress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>storageManagerProgress</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass2/&lt;&lt;LoadFileSystemImageFromFile&gt;b__1&gt;d__4</name>
                <newname>FileSystemImage.FrmMain/eval_b/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass2</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;FileSystemImage.FileSystem.FileSystemDrive&gt;</signature>
                        <name>&lt;&gt;u__$awaiter7</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.StorageManagerSettings</signature>
                        <name>&lt;settings&gt;5__5</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;storageManager&gt;5__6</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass23</name>
                <newname>FileSystemImage.FrmMain/eval_f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task()</signature>
                        <name>&lt;DoPartialTreeUpdateAsync&gt;b__22</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.FrmMain</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Progress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>storageManagerProgress</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDirectory</signature>
                        <name>targetDirectory</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass23/&lt;&lt;DoPartialTreeUpdateAsync&gt;b__22&gt;d__25</name>
                <newname>FileSystemImage.FrmMain/eval_f/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass23</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;FileSystemImage.FileSystem.FileSystemDrive&gt;</signature>
                        <name>&lt;&gt;u__$awaiter26</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/&lt;&gt;c__DisplayClass2a</name>
                <newname>FileSystemImage.FrmMain/eval_g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(FileSystemImage.FileSystem.FileSystemDirectory)</signature>
                        <name>&lt;GetFileSystemDirectoryFromPath&gt;b__28</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>dir</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.FrmMain/ROOT_Identifyer</name>
                <newname>FileSystemImage.FrmMain/eval_a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.InputForms.FormGetPassword</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>FormGetPassword_Shown</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleCancelClick</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>HandleOkClick</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PasswordSalt</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_PasswordString</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_PasswordVerified</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PasswordSalt</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_PasswordString</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_PasswordVerified</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>txtPassword_KeyPress</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtPassword_KeyUp</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PasswordDerivedString&gt;k__BackingField</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PasswordSalt&gt;k__BackingField</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;PasswordString&gt;k__BackingField</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;PasswordVerified&gt;k__BackingField</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>PasswordDerivedString</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PasswordSalt</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>PasswordString</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>PasswordVerified</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.InputForms.FormSetPassword</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>TryToSetPassword</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidatePasswords</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VerifiedPassword</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VerifiedPassword</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>txtPassword1_Enter</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>txtPassword2_Enter</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtPasswordFields_KeyDown</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyEventArgs)</signature>
                        <name>txtPasswordFields_KeyUp</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VerifiedPassword&gt;k__BackingField</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>errorMessage</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Text.RegularExpressions.Regex</signature>
                        <name>passwordPattern</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtPassword2</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>VerifiedPassword</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.ListItem</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Value</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Value</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Value&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Value</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Program</name>
                <newname>eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcActionAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AnonymousProperty</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AnonymousProperty</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AnonymousProperty&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AnonymousProperty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcActionSelectorAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcAreaAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AnonymousProperty</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AnonymousProperty</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AnonymousProperty&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AnonymousProperty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcAreaMasterLocationFormatAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcAreaPartialViewLocationFormatAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcAreaViewLocationFormatAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcControllerAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AnonymousProperty</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AnonymousProperty</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AnonymousProperty&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AnonymousProperty</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcDisplayTemplateAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcEditorTemplateAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcMasterAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcMasterLocationFormatAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcModelTypeAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcPartialViewAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcPartialViewLocationFormatAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcSupressViewErrorAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcTemplateAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcViewAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.AspMvcViewLocationFormatAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.BaseTypeRequiredAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Type()</signature>
                        <name>get_BaseType</name>
                    </method>
                    <method>
                        <signature>void(System.Type)</signature>
                        <name>set_BaseType</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Type</signature>
                        <name>&lt;BaseType&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Type()</signature>
                        <name>BaseType</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.CanBeNullAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.CannotApplyEqualityOperatorAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.ContractAnnotationAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Contract</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ForceFullStates</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Contract</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ForceFullStates</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Contract&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;ForceFullStates&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Contract</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ForceFullStates</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.HtmlAttributeValueAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.HtmlElementAttributesAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.ImplicitUseKindFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>Access</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>Assign</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>Default</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>InstantiatedNoFixedConstructorSignature</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>InstantiatedWithFixedConstructorSignature</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.ImplicitUseTargetFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags</signature>
                        <name>Default</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags</signature>
                        <name>Itself</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags</signature>
                        <name>Members</name>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags</signature>
                        <name>WithMembers</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.InstantHandleAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.InvokerParameterNameAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.LocalizationRequiredAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Required</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Required</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Required&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Required</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.MeansImplicitUseAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseKindFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseKindFlags, FileSystemImage.Properties.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags()</signature>
                        <name>get_TargetFlags</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags()</signature>
                        <name>get_UseKindFlags</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseTargetFlags)</signature>
                        <name>set_TargetFlags</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseKindFlags)</signature>
                        <name>set_UseKindFlags</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags</signature>
                        <name>&lt;TargetFlags&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>&lt;UseKindFlags&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags()</signature>
                        <name>TargetFlags</name>
                    </property>
                    <property>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags()</signature>
                        <name>UseKindFlags</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.NotNullAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.NotifyPropertyChangedInvocatorAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ParameterName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ParameterName</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ParameterName&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ParameterName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.PathReferenceAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BasePath</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BasePath</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;BasePath&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BasePath</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.PublicAPIAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Comment</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Comment</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Comment&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Comment</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.PureAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.RazorSectionAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FileSystemImage.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.StringFormatMethodAttribute</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FormatParameterName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FormatParameterName</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FormatParameterName&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>FormatParameterName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Properties.UsedImplicitlyAttribute</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseKindFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseKindFlags, FileSystemImage.Properties.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseTargetFlags)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags()</signature>
                        <name>get_TargetFlags</name>
                    </method>
                    <method>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags()</signature>
                        <name>get_UseKindFlags</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseTargetFlags)</signature>
                        <name>set_TargetFlags</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.Properties.ImplicitUseKindFlags)</signature>
                        <name>set_UseKindFlags</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags</signature>
                        <name>&lt;TargetFlags&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags</signature>
                        <name>&lt;UseKindFlags&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>FileSystemImage.Properties.ImplicitUseTargetFlags()</signature>
                        <name>TargetFlags</name>
                    </property>
                    <property>
                        <signature>FileSystemImage.Properties.ImplicitUseKindFlags()</signature>
                        <name>UseKindFlags</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Utils.AsyncThreadExecution</name>
                <methodlist>
                    <method>
                        <signature>void(FileSystemImage.Utils.Delegates.AsyncThreadExecutionMethod)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Start</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ThMain</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>FileSystemImage.Utils.Delegates.AsyncThreadExecutionMethod</signature>
                        <name>_asyncThreadExecutionMethod</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Threading.Thread</signature>
                        <name>_workerThread</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Utils.Delegates.AsyncThreadExecutionCallbackMethod</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Utils.Delegates.AsyncThreadExecutionMethod</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.Utils.MemoryHandler</name>
                <newname>eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>RunGarbageCollect</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.frmCreateSysImage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DriveInfo)</signature>
                        <name>&lt;frmCreateSysImage_Load&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string(System.IO.DriveInfo)</signature>
                        <name>GetDriveInfoListItemText</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>ProgressUpdate</name>
                    </method>
                    <method>
                        <signature>void(float64)</signature>
                        <name>ProgressUpdateNativeThead</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>SetFileSystemDrive</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>SetFileSystemDriveComplete</name>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FrmMain)</signature>
                        <name>SetMainWindow</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSave_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnStart_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.FormClosingEventArgs)</signature>
                        <name>frmCreateSysImage_FormClosing</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>frmCreateSysImage_Load</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;System.IO.DriveInfo,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>_fileSystemDriveLock</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSave</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnStart</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>currentFileSystemDrive</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ComboBox</signature>
                        <name>drpDrive</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpSettings</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FrmMain</signature>
                        <name>mainWindow</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ProgressBar</signature>
                        <name>progressBar1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.frmCreateSysImage/CreateFileSystemImageComplete</name>
                <newname>FileSystemImage.frmCreateSysImage/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.frmDriveInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>SetFileSystemDrive</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnOk_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>frmDriveInfo_Load</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnOk</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>currentFileSystemDrive</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ListView</signature>
                        <name>driveInfoListView</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ColumnHeader</signature>
                        <name>properyColumn</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ColumnHeader</signature>
                        <name>valueColumn</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>FileSystemImage.frmSearch</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>PerformSearch</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(FileSystemImage.FileSystem.FileSystemDrive)</signature>
                        <name>SetFileSystemDrive</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnSearch_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>frmSearch_Load</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>frmSearch_Resize</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>lstResults_KeyPress</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.Windows.Forms.KeyPressEventArgs)</signature>
                        <name>txtSearch_KeyPress</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnSearch</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkIgnoreCase</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.CheckBox</signature>
                        <name>chkRegexp</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>FileSystemImage.FileSystem.FileSystemDrive</signature>
                        <name>fileSystemDrive</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpSearch</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblFilename</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ListBox</signature>
                        <name>lstResults</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.StatusStrip</signature>
                        <name>statusStrip1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripStatusLabel</signature>
                        <name>toolStripSearchResCount</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.ToolStripStatusLabel</signature>
                        <name>toolStripStatusLabel1</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtSearch</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
        <module>
            <name>GeneralToolkitLib.dll</name>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;version&gt;j__TPar</name>
                    <newname>eval_a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;capacity&gt;j__TPar</name>
                    <newname>eval_b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType0`2</name>
                <newname>eval_x</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_capacity</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_version</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;capacity&gt;i__Field</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;version&gt;i__Field</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!1()</signature>
                        <name>capacity</name>
                        <newname>eval_b</newname>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>version</name>
                        <newname>eval_a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;Index&gt;j__TPar</name>
                    <newname>eval_a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Value&gt;j__TPar</name>
                    <newname>eval_b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType1`2</name>
                <newname>eval_y</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Index</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Value</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Index&gt;i__Field</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Value&gt;i__Field</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Index</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>Value</name>
                        <newname>b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>2</arity>
                <genericparameter sequence="0">
                    <name>&lt;Chr&gt;j__TPar</name>
                    <newname>eval_a</newname>
                </genericparameter>
                <genericparameter sequence="1">
                    <name>&lt;Index&gt;j__TPar</name>
                    <newname>eval_b</newname>
                </genericparameter>
                <name>&lt;&gt;f__AnonymousType2`2</name>
                <newname>eval_z</newname>
                <methodlist>
                    <method>
                        <signature>void(!0, !1)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Chr</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>!1()</signature>
                        <name>get_Index</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;Chr&gt;i__Field</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>!1</signature>
                        <name>&lt;Index&gt;i__Field</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Chr</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>!1()</signature>
                        <name>Index</name>
                        <newname>b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}</name>
                <newname>eval_w</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=1120</signature>
                        <name>$$method0x6000001-1</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=90</signature>
                        <name>$$method0x6000001-2</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=2560</signature>
                        <name>$$method0x6000001-3</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=3840</signature>
                        <name>$$method0x6000001-4</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=160</signature>
                        <name>$$method0x6000001-5</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=240</signature>
                        <name>$$method0x6000023-1</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x60003ee-1</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x60003ee-2</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=1024</signature>
                        <name>$$method0x60003f6-1</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x6000407-1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x6000407-2</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x6000408-1</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</signature>
                        <name>$$method0x6000408-2</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_n</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=1024</name>
                <newname>eval_w/eval_h</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=1120</name>
                <newname>eval_w/eval_a</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=160</name>
                <newname>eval_w/eval_e</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=240</name>
                <newname>eval_w/eval_f</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=2560</name>
                <newname>eval_w/eval_c</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=32</name>
                <newname>eval_w/eval_g</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=3840</name>
                <newname>eval_w/eval_d</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>&lt;PrivateImplementationDetails&gt;{91BEEB07-D82C-4405-B991-83FAF4F400A7}/__StaticArrayInitTypeSize=90</name>
                <newname>eval_w/eval_b</newname>
                <methodlist />
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;(char, int32)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__1d</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__1e</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string(System.Linq.IGrouping`2&lt;int32,&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;&gt;)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__1f</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;)</signature>
                        <name>&lt;BinaryStringToBitBlockList&gt;b__20</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;CalculateECCWords&gt;b__a</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(&lt;&gt;f__AnonymousType2`2&lt;char,int32&gt;)</signature>
                        <name>&lt;CreateAlphanumEncDict&gt;b__41</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType2`2&lt;char,int32&gt;(char, int32)</signature>
                        <name>&lt;CreateAlphanumEncDict&gt;b__42</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;(GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern)</signature>
                        <name>&lt;CreateQrCode&gt;b__4</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetAlphaExpFromIntVal&gt;b__3d</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;GetEncodingFromPlaintext&gt;b__15</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>&lt;GetEncodingFromPlaintext&gt;b__16</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetIntValFromAlphaExp&gt;b__38</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(&lt;&gt;f__AnonymousType0`2&lt;int32,int32&gt;)</signature>
                        <name>&lt;GetVersion&gt;b__11</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__26</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__27</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__28</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(int32, GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__2a</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__2c</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>BinToDec</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string)</signature>
                        <name>BinaryStringToBitBlockList</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;(string, GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo)</signature>
                        <name>CalculateECCWords</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(int32)</signature>
                        <name>CalculateGeneratorPolynom</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(string)</signature>
                        <name>CalculateMessagePolynom</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>ConvertToAlphaNotation</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>ConvertToDecNotation</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateAlignmentPatternTable</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateAlphanumEncDict</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateAntilogTable</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateCapacityECCTable</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CreateCapacityTable</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode(string, GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel)</signature>
                        <name>CreateQrCode</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>DecToBin</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>string(int32, int32)</signature>
                        <name>DecToBin</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetAlphaExpFromIntVal</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(int32, GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode)</signature>
                        <name>GetCountIndicatorLength</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode(string)</signature>
                        <name>GetEncodingFromPlaintext</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>string(GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel, int32)</signature>
                        <name>GetFormatString</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>GetIntValFromAlphaExp</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int32(string, GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode, GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel)</signature>
                        <name>GetVersion</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetVersionString</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidISO</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom, GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>MultiplyAlphaPolynoms</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom, GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem, int32)</signature>
                        <name>MultiplyGeneratorPolynomByLeadterm</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(string, GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode)</signature>
                        <name>PlainTextToBinary</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>PlainTextToBinaryAlphanumeric</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>PlainTextToBinaryByte</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>PlainTextToBinaryNumeric</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ShrinkAlphaExp</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom(GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom, GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom)</signature>
                        <name>XORPolynoms</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType0`2&lt;int32,int32&gt;,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate12</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;char,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate17</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;char,int32,&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate21</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate22</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate23</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;&lt;&gt;f__AnonymousType1`2&lt;int32,char&gt;,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate24</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2d</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2e</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Linq.IGrouping`2&lt;int32,GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2f</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate31</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate39</name>
                        <newname>eval_v</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog,int32&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3e</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>System.Func`3&lt;char,int32,&lt;&gt;f__AnonymousType2`2&lt;char,int32&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate43</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern,System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate5</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>alignmentPatternBaseValues</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern&gt;</signature>
                        <name>alignmentPatternTable</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;char,int32&gt;</signature>
                        <name>alphanumEncDict</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>char[]</signature>
                        <name>alphanumEncTable</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>capacityBaseValues</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>capacityECCBaseValues</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo&gt;</signature>
                        <name>capacityECCTable</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo&gt;</signature>
                        <name>capacityTable</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog&gt;</signature>
                        <name>galoisField</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_y</newname>
                    </field>
                    <field>
                        <signature>int32[]</signature>
                        <name>remainderBits</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass13</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails)</signature>
                        <name>&lt;GetVersion&gt;b__10</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo)</signature>
                        <name>&lt;GetVersion&gt;b__d</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails)</signature>
                        <name>&lt;GetVersion&gt;b__e</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>&lt;&gt;f__AnonymousType0`2&lt;int32,int32&gt;(GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo)</signature>
                        <name>&lt;GetVersion&gt;b__f</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>eccLevel</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>encMode</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>plainText</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass32</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__2b</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;int32&gt;</signature>
                        <name>toGlue</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass35</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_n</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;MultiplyAlphaPolynoms&gt;b__29</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass32</signature>
                        <name>CS$&lt;&gt;8__locals33</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>exponent</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass3a</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_o</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetIntValFromAlphaExp&gt;b__37</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>exp</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass3f</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_p</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog)</signature>
                        <name>&lt;GetAlphaExpFromIntVal&gt;b__3c</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>intVal</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/&lt;&gt;c__DisplayClass6</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo)</signature>
                        <name>&lt;CreateQrCode&gt;b__2</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern)</signature>
                        <name>&lt;CreateQrCode&gt;b__3</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>eccLevel</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>version</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/AlignmentPattern</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;</signature>
                        <name>PatternPositions</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/Antilog</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_b</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>ExponentAlpha</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IntegerValue</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/CodewordBlock</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_c</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BitString</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BlockNumber</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>CodeWords</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>ECCWords</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>GroupNumber</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCInfo</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_d</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BlocksInGroup1</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BlocksInGroup2</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CodewordsInGroup1</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>CodewordsInGroup2</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>ECCPerBlock</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>ErrorCorrectionLevel</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>TotalDataCodewords</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>H</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>L</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>M</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>Q</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_e</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Alphanumeric</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Byte</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>ECI</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Kanji</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode</signature>
                        <name>Numeric</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_f</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;)</signature>
                        <name>AddQuietZone</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Rectangle, System.Drawing.Rectangle)</signature>
                        <name>Intersects</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Drawing.Rectangle, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;)</signature>
                        <name>IsBlocked</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>MaskCode</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, System.Collections.Generic.List`1&lt;System.Drawing.Point&gt;, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceAlignmentPatterns</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceDarkModule</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, string, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceDataWords</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceFinderPatterns</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, string)</signature>
                        <name>PlaceFormat</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>PlaceTimingPatterns</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;, string)</signature>
                        <name>PlaceVersion</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>ReserveSeperatorAreas</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32, System.Collections.Generic.List`1&lt;System.Drawing.Rectangle&gt;&amp;)</signature>
                        <name>ReserveVersionAreas</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer/&lt;&gt;c__DisplayClass55</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_f/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Reflection.MethodInfo)</signature>
                        <name>&lt;MaskCode&gt;b__54</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>patternName</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer/&lt;&gt;c__DisplayClass58</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_f/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(char)</signature>
                        <name>&lt;PlaceDataWords&gt;b__57</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;bool&gt;</signature>
                        <name>datawords</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/ModulePlacer/MaskPattern</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_f/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern1</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern2</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern3</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern4</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern5</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern6</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern7</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(int32, int32)</signature>
                        <name>Pattern8</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode&amp;)</signature>
                        <name>Score</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_g</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;()</signature>
                        <name>get_PolyItems</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;)</signature>
                        <name>set_PolyItems</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;</signature>
                        <name>&lt;PolyItems&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem&gt;()</signature>
                        <name>PolyItems</name>
                        <newname>eval_a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/Polynom/&lt;&gt;c__DisplayClass5b</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_g/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem)</signature>
                        <name>&lt;ToString&gt;b__5a</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Text.StringBuilder</signature>
                        <name>sb</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/PolynomItem</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_h</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>Coefficient</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Exponent</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/QRCode</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Drawing.Bitmap(int32)</signature>
                        <name>GetGraphic</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>ModulesPerSideFromVersion</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;()</signature>
                        <name>get_ModuleMatrix</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;)</signature>
                        <name>set_ModuleMatrix</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;</signature>
                        <name>&lt;ModuleMatrix&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>version</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;System.Collections.BitArray&gt;()</signature>
                        <name>ModuleMatrix</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfo</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_i</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails&gt;</signature>
                        <name>Details</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>Version</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Barcode.QRCodeGenerator/VersionInfoDetails</name>
                <newname>GeneralToolkitLib.Barcode.QRCodeGenerator/eval_j</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;GeneralToolkitLib.Barcode.QRCodeGenerator/EncodingMode,int32&gt;</signature>
                        <name>CapacityDict</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator/ECCLevel</signature>
                        <name>ErrorCorrectionLevel</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation</name>
                <methodlist>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;, GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;, GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations, int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>SetProgress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</signature>
                        <name>_codingOperation</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>_originalSize</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>_progress</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</signature>
                        <name>Decoding</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation/CodingOperations</signature>
                        <name>Encoding</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.CoderPropID</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>Algorithm</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>BlockSize</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>DefaultProp</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>DictionarySize</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>EndMarker</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>LitContextBits</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>LitPosBits</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>MatchFinder</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>MatchFinderCycles</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>NumFastBytes</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>NumPasses</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>NumThreads</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>Order</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>PosStateBits</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.CoderPropID</signature>
                        <name>UsedMemorySize</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.CRC</name>
                <newname>eval_e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>CalculateDigest</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetDigest</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>Update</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>UpdateByte</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(unsigned int32, unsigned int8[], unsigned int32, unsigned int32)</signature>
                        <name>VerifyDigest</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>Table</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_value</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.CommandForm</name>
                <methodlist>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>IDString</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>PostStringMode</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.CommandSubCharsSet</name>
                <newname>eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Chars</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>EmptyAllowed</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.InBuffer</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>GetProcessedSize</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ReadBlock</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8)</signature>
                        <name>ReadByte</name>
                    </method>
                    <method>
                        <signature>unsigned int8()</signature>
                        <name>ReadByte</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_Buffer</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_BufferSize</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_Limit</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_Pos</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>m_ProcessedSize</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>m_Stream</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>m_StreamWasExhausted</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.OutBuffer</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushData</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushStream</name>
                    </method>
                    <method>
                        <signature>unsigned int64()</signature>
                        <name>GetProcessedSize</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>WriteByte</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>m_Buffer</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_BufferSize</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_Pos</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>m_ProcessedSize</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>m_Stream</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.Parser</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(char)</signature>
                        <name>IsItSwitchChar</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult(int32)</signature>
                        <name>get_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult[]</signature>
                        <name>_switches</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>kSwitchID1</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>kSwitchID2</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>char</signature>
                        <name>kSwitchMinus</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult(int32)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.SwitchForm</name>
                <methodlist>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Compression.SevenZip.Common.SwitchType, bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Compression.SevenZip.Common.SwitchType, bool, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Compression.SevenZip.Common.SwitchType, bool, int32, int32, string)</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>IDString</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MaxLen</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MinLen</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Multi</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>PostCharSet</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>Type</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.SwitchResult</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>PostCharIndex</name>
                    </field>
                    <field>
                        <signature>System.Collections.ArrayList</signature>
                        <name>PostStrings</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>ThereIs</name>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>WithMinus</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>LimitedPostString</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>PostChar</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>PostMinus</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>Simple</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Common.SwitchType</signature>
                        <name>UnLimitedPostString</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.BinTree</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>GetIndexByte</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, unsigned int32, unsigned int32)</signature>
                        <name>GetMatchLen</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32[])</signature>
                        <name>GetMatches</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetNumAvailableBytes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MovePos</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Normalize</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32[], unsigned int32, unsigned int32)</signature>
                        <name>NormalizeLinks</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetCutValue</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetType</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Skip</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>HASH_ARRAY</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cutValue</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cyclicBufferPos</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cyclicBufferSize</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_hash</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_hashMask</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_hashSizeSum</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_matchMaxLen</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_son</name>
                        <newname>o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kBT2HashSize</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kEmptyHashValue</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kFixHashSize</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kHash2Size</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kHash3Offset</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kHash3Size</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMaxValForNormalize</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMinMatchCheck</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumHashDirectBytes</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kStartMaxLen</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_t</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.IInWindowStream</name>
                <newname>eval_g</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>GetIndexByte</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, unsigned int32, unsigned int32)</signature>
                        <name>GetMatchLen</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetNumAvailableBytes</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.IMatchFinder</name>
                <newname>eval_h</newname>
                <methodlist>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Create</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32[])</signature>
                        <name>GetMatches</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Skip</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.InWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Free</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>GetIndexByte</name>
                    </method>
                    <method>
                        <signature>unsigned int32(int32, unsigned int32, unsigned int32)</signature>
                        <name>GetMatchLen</name>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetNumAvailableBytes</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MoveBlock</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MovePos</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReadBlock</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>ReduceOffsets</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_blockSize</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>_bufferBase</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_bufferOffset</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_keepSizeAfter</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_keepSizeBefore</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_pointerToLastSafePosition</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_pos</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_posLimit</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>_stream</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_streamEndWasReached</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_streamPos</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.OutWindow</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32)</signature>
                        <name>CopyBlock</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Flush</name>
                    </method>
                    <method>
                        <signature>unsigned int8(unsigned int32)</signature>
                        <name>GetByte</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, bool)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>PutByte</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>Train</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>TrainSize</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>_buffer</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_pos</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>_stream</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_streamPos</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_windowSize</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base</name>
                <newname>eval_f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetLenToPosState</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kAlignMask</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kAlignTableSize</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kDicLogSizeMin</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kEndPosModelIndex</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMatchMaxLen</name>
                        <newname>eval_aa</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kMatchMinLen</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumAlignBits</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumFullDistances</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumHighLenBits</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLenSymbols</name>
                        <newname>eval_z</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLenToPosStates</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumLenToPosStatesBits</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLitContextBitsMax</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLitPosStatesBitsEncodingMax</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumLowLenBits</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumLowLenSymbols</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMidLenBits</name>
                        <newname>eval_v</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumMidLenSymbols</name>
                        <newname>eval_y</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumPosModels</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumPosSlotBits</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumPosStatesBitsEncodingMax</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumPosStatesBitsMax</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumPosStatesEncodingMax</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumPosStatesMax</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumRepDistances</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumStates</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kStartPosModelIndex</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_ab</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State</name>
                <newname>eval_f/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsCharState</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateChar</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateMatch</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateRep</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>UpdateShortRep</name>
                        <newname>eval_f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Index</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>Code</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>SetDecoderProperties</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetDictionarySize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>SetLiteralProperties</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>SetPosBitsProperties</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>Train</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>_solid</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_DictionarySize</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_DictionarySizeCheck</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsMatchDecoders</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRep0LongDecoders</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepDecoders</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepG0Decoders</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepG1Decoders</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_IsRepG2Decoders</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LenDecoder</signature>
                        <name>m_LenDecoder</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder</signature>
                        <name>m_LiteralDecoder</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.OutWindow</signature>
                        <name>m_OutWindow</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder</signature>
                        <name>m_PosAlignDecoder</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_PosDecoders</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder[]</signature>
                        <name>m_PosSlotDecoder</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_PosStateMask</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder</signature>
                        <name>m_RangeDecoder</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LenDecoder</signature>
                        <name>m_RepLenDecoder</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_s</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LenDecoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Create</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int32)</signature>
                        <name>Decode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder</signature>
                        <name>m_Choice</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder</signature>
                        <name>m_Choice2</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder</signature>
                        <name>m_HighCoder</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder[]</signature>
                        <name>m_LowCoder</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder[]</signature>
                        <name>m_MidCoder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_NumPosStates</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>Create</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int32, unsigned int8)</signature>
                        <name>DecodeNormal</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int32, unsigned int8, unsigned int8)</signature>
                        <name>DecodeWithMatchByte</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int8)</signature>
                        <name>GetState</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder/Decoder2[]</signature>
                        <name>m_Coders</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPosBits</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPrevBits</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_PosMask</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/LiteralDecoder/Decoder2</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Decoder/eval_b/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Create</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>DecodeNormal</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, unsigned int8)</signature>
                        <name>DecodeWithMatchByte</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>m_Decoders</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32&amp;, unsigned int32)</signature>
                        <name>Backward</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>BaseInit</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>Code</name>
                    </method>
                    <method>
                        <signature>void(int64&amp;, int64&amp;, bool&amp;)</signature>
                        <name>CodeOneBlock</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Create</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FillAlignPrices</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FillDistancesPrices</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32(string)</signature>
                        <name>FindMatchFinder</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Flush</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32&amp;)</signature>
                        <name>GetOptimum</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>GetPosLenPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPosSlot</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPosSlot2</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State, unsigned int32)</signature>
                        <name>GetPureRepPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State, unsigned int32)</signature>
                        <name>GetRepLen1Price</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State, unsigned int32)</signature>
                        <name>GetRepPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>MovePos</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32&amp;, unsigned int32&amp;)</signature>
                        <name>ReadMatchDistances</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseMFStream</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseOutStream</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStreams</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.CoderPropID[], object[])</signature>
                        <name>SetCoderProperties</name>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetOutStream</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream)</signature>
                        <name>SetStreams</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>SetWriteEndMarkerMode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>WriteCoderProperties</name>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>WriteEndMarker</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_additionalOffset</name>
                        <newname>eval_ad</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_alignPriceCount</name>
                        <newname>eval_ae</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_alignPrices</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_dictionarySize</name>
                        <newname>eval_af</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_dictionarySizePrev</name>
                        <newname>eval_ag</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_distTableSize</name>
                        <newname>eval_ah</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_distancesPrices</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_finished</name>
                        <newname>eval_ai</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>_inStream</name>
                        <newname>eval_aj</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isMatch</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRep</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRep0Long</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRepG0</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRepG1</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_isRepG2</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenPriceTableEncoder</signature>
                        <name>_lenEncoder</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder</signature>
                        <name>_literalEncoder</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_longestMatchLength</name>
                        <newname>eval_ak</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_longestMatchWasFound</name>
                        <newname>eval_al</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_matchDistances</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZ.IMatchFinder</signature>
                        <name>_matchFinder</name>
                        <newname>eval_am</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</signature>
                        <name>_matchFinderType</name>
                        <newname>eval_an</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_matchPriceCount</name>
                        <newname>eval_ao</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_needReleaseMFStream</name>
                        <newname>eval_ap</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_numDistancePairs</name>
                        <newname>eval_aq</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_numFastBytes</name>
                        <newname>eval_ar</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_numFastBytesPrev</name>
                        <newname>eval_as</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_numLiteralContextBits</name>
                        <newname>eval_at</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_numLiteralPosStateBits</name>
                        <newname>eval_au</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/Optimal[]</signature>
                        <name>_optimum</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_optimumCurrentIndex</name>
                        <newname>eval_av</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_optimumEndIndex</name>
                        <newname>eval_aw</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder</signature>
                        <name>_posAlignEncoder</name>
                        <newname>eval_ax</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>_posEncoders</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder[]</signature>
                        <name>_posSlotEncoder</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_posSlotPrices</name>
                        <newname>eval_v</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_posStateBits</name>
                        <newname>eval_ay</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_posStateMask</name>
                        <newname>eval_az</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>_previousByte</name>
                        <newname>eval_a0</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder</signature>
                        <name>_rangeEncoder</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_repDistances</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenPriceTableEncoder</signature>
                        <name>_repMatchLenEncoder</name>
                        <newname>eval_y</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State</signature>
                        <name>_state</name>
                        <newname>a1</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_writeEndMark</name>
                        <newname>eval_a2</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>g_FastPos</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kDefaultDictionaryLogSize</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kIfinityPrice</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>kMatchFinderIDs</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumFastBytesDefault</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kNumOpts</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kPropSize</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>nowPos64</name>
                        <newname>eval_a3</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>properties</name>
                        <newname>eval_z</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a4</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>repLens</name>
                        <newname>eval_aa</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>reps</name>
                        <newname>ab</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>tempPrices</name>
                        <newname>eval_ac</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/CodeProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>Finished</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ProcessedInSize</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>ProcessedOutSize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/eval_a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</signature>
                        <name>BT2</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/EMatchFinderType</signature>
                        <name>BT4</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenEncoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>Init</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32[], unsigned int32)</signature>
                        <name>SetPrices</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder</signature>
                        <name>_choice</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder</signature>
                        <name>_choice2</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder</signature>
                        <name>_highCoder</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder[]</signature>
                        <name>_lowCoder</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder[]</signature>
                        <name>_midCoder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LenPriceTableEncoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, unsigned int32)</signature>
                        <name>GetPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>SetTableSize</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>UpdateTable</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>UpdateTables</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_counters</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>_prices</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_tableSize</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int32, int32)</signature>
                        <name>Create</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder/Encoder2(unsigned int32, unsigned int8)</signature>
                        <name>GetSubCoder</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder/Encoder2[]</signature>
                        <name>m_Coders</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPosBits</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>m_NumPrevBits</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>m_PosMask</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/LiteralEncoder/Encoder2</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/eval_d/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>Create</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int8)</signature>
                        <name>Encode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int8, unsigned int8)</signature>
                        <name>EncodeMatched</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(bool, unsigned int8, unsigned int8)</signature>
                        <name>GetPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>m_Encoders</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/Optimal</name>
                <newname>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Encoder/eval_e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>IsShortRep</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeAsChar</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>MakeAsShortRep</name>
                        <newname>eval_k</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BackPrev</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>BackPrev2</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs0</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs1</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs2</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Backs3</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PosPrev</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>PosPrev2</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Prev1IsChar</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Prev2</name>
                        <newname>j</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Price</name>
                        <newname>k</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.LZMA.Base/State</signature>
                        <name>State</name>
                        <newname>l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_m</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder</name>
                <newname>eval_i</newname>
                <methodlist>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>Decode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(int32, unsigned int32)</signature>
                        <name>UpdateModel</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Prob</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kBitModelTotal</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumBitModelTotalBits</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMoveBits</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder</name>
                <newname>eval_m</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPrice</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetPrice0</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>unsigned int32()</signature>
                        <name>GetPrice1</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32)</signature>
                        <name>UpdateModel</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Prob</name>
                        <newname>g</newname>
                    </field>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>ProbPrices</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kBitModelTotal</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumBitModelTotalBits</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumBitPriceShiftBits</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMoveBits</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>kNumMoveReducingBits</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeDecoder</name>
                <newname>eval_j</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>Decode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[], unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder, int32)</signature>
                        <name>ReverseDecode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder)</signature>
                        <name>ReverseDecode</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitDecoder[]</signature>
                        <name>Models</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NumBitLevels</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitTreeEncoder</name>
                <newname>eval_n</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[], unsigned int32, GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, int32, unsigned int32)</signature>
                        <name>ReverseEncode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder, unsigned int32)</signature>
                        <name>ReverseEncode</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[], unsigned int32, int32, unsigned int32)</signature>
                        <name>ReverseGetPrice</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>ReverseGetPrice</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.BitEncoder[]</signature>
                        <name>Models</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>NumBitLevels</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Decoder</name>
                <newname>eval_k</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Decode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32, int32)</signature>
                        <name>DecodeBit</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(int32)</signature>
                        <name>DecodeDirectBits</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int32(unsigned int32)</signature>
                        <name>GetThreshold</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>Init</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Normalize</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Normalize2</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Code</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Range</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>Stream</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kTopValue</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.Compress.RangeCoder.Encoder</name>
                <newname>eval_l</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>CloseStream</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, unsigned int32, unsigned int32)</signature>
                        <name>Encode</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, int32, unsigned int32)</signature>
                        <name>EncodeBit</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(unsigned int32, int32)</signature>
                        <name>EncodeDirectBits</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushData</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>FlushStream</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>GetProcessedSizeAdd</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Init</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ReleaseStream</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>SetStream</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ShiftLow</name>
                        <newname>eval_f</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>Low</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>Range</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>StartPosition</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>Stream</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>unsigned int8</signature>
                        <name>_cache</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>_cacheSize</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>kTopValue</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_h</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.DataErrorException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ICodeProgress</name>
                <methodlist>
                    <method>
                        <signature>void(int64, int64)</signature>
                        <name>SetProgress</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ICoder</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, int64, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>Code</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ISetCoderProperties</name>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Compression.SevenZip.CoderPropID[], object[])</signature>
                        <name>SetCoderProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.ISetDecoderProperties</name>
                <methodlist>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>SetDecoderProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.IWriteCoderProperties</name>
                <methodlist>
                    <method>
                        <signature>void(System.IO.Stream)</signature>
                        <name>WriteCoderProperties</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Compression.SevenZip.InvalidParamException</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.GlobalSettings</name>
                <methodlist>
                    <method>
                        <signature>string()</signature>
                        <name>GetApplicationLogFilePath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetAssemblyPath</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetHashtableFilename</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUserDataDirectoryPath</name>
                    </method>
                    <method>
                        <signature>void(string, bool)</signature>
                        <name>Initialize</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInitialized</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>UserDbFileName</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_isInitialized</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_logFileName</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_userDataPath</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInitialized</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>get_ConfigItems</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;()</signature>
                        <name>get_ConfigSections</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.ConfigHelper.IniConfigItemCollection)</signature>
                        <name>set_ConfigItems</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;)</signature>
                        <name>set_ConfigSections</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection</signature>
                        <name>&lt;ConfigItems&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;</signature>
                        <name>&lt;ConfigSections&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>ConfigItems</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;()</signature>
                        <name>ConfigSections</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigFileManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadConfigFile</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>SaveConfigFile</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigFile()</signature>
                        <name>get_ConfigurationData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>ConfigFileItemPattern</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ConfigFileSectionPattern</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ConfigSectionNamePattern</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigFile</signature>
                        <name>_iniFileData</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigFile()</signature>
                        <name>ConfigurationData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigFileSection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>get_ConfigItems</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.ConfigHelper.IniConfigItemCollection)</signature>
                        <name>set_ConfigItems</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection</signature>
                        <name>&lt;ConfigItems&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection()</signature>
                        <name>ConfigItems</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.ConfigHelper.IniConfigItemCollection</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>get_Item</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>set_Item</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string(string)</signature>
                        <name>Item</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.Base32</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>FromBase32String</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ToBase32String</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>Base32Alphabet</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>InByteSize</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>OutByteSize</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.Base32Encoding</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(char)</signature>
                        <name>CharToValue</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>ToBytes</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>char(unsigned int8)</signature>
                        <name>ValueToChar</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters</name>
                <methodlist>
                    <method>
                        <signature>bool(int32)</signature>
                        <name>&lt;HexStringToByteArray&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteArrayToBase64</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ByteArrayToHexString</name>
                    </method>
                    <method>
                        <signature>string(System.IO.FileAttributes)</signature>
                        <name>FileAttributesToString</name>
                    </method>
                    <method>
                        <signature>string(int64)</signature>
                        <name>FormatFileSizeToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GeneratePasswordDerivedString</name>
                    </method>
                    <method>
                        <signature>string(string, bool)</signature>
                        <name>GetDirectoryNameFromPath</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetFileNameFromPath</name>
                    </method>
                    <method>
                        <signature>string(int32)</signature>
                        <name>GetRandomHexValue</name>
                    </method>
                    <method>
                        <signature>int32(System.DateTime)</signature>
                        <name>GetSecondsFromDateTime</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetVolumeLabelFromPath</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>HexStringToByteArray</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](string)</signature>
                        <name>StringToByteArray</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;int32,bool&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate2</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/&lt;&gt;c__DisplayClass3</name>
                <newname>GeneralToolkitLib.Converters.GeneralConverters/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8(int32)</signature>
                        <name>&lt;HexStringToByteArray&gt;b__1</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>hex</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>string(int64)</signature>
                        <name>ConvertFileSizeToString</name>
                    </method>
                    <method>
                        <signature>string(int64, int32)</signature>
                        <name>ConvertFileSizeToString</name>
                    </method>
                    <method>
                        <signature>string(int64, unsigned int16, GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/OffsetRange[])</signature>
                        <name>ConvertFileSizeToString</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>FileSizeTypesStrings</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>Byte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>GigaByte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>KiloByte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>MegaByte</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>PetaByte</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/OffsetRange</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Converters.GeneralConverters/FileSizeToStringFormater/FileSizeSteps</signature>
                        <name>FileSizeStep</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>Max</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.GeneralConverters/StaticLongFileSizes</name>
                <newname>GeneralToolkitLib.Converters.GeneralConverters/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string[]</signature>
                        <name>FileSizeTypesStrings</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Converters.StringManipulation</name>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>Reverse</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>ReverseBySeparator</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ReverseXor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.AVLTreeNode`1</name>
                <newname>eval_p</newname>
                <methodlist>
                    <method>
                        <signature>void(!0)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_LeftChild</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Parent</name>
                        <newname>eval_n</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_RightChild</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_LeftChild</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Parent</name>
                        <newname>eval_n</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_RightChild</name>
                        <newname>eval_m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>LeftChild</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>Parent</name>
                        <newname>eval_c</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>RightChild</name>
                        <newname>eval_b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.AVLTree`1</name>
                <newname>eval_r</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>Add</name>
                        <newname>d</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;(!0)</signature>
                        <name>Find</name>
                        <newname>b</newname>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Remove</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>Remove</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>Remove</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;, int32)</signature>
                        <name>balanceAt</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>getBalance</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Root</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>rotateLeft</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>rotateRight</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Root</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.AVLTreeNode`1&lt;!0&gt;()</signature>
                        <name>Root</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTreeNode`1</name>
                <newname>eval_o</newname>
                <methodlist>
                    <method>
                        <signature>void(!0)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ChildCount</name>
                        <newname>eval_x</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasLeftChild</name>
                        <newname>eval_y</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_HasRightChild</name>
                        <newname>eval_z</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsInternal</name>
                        <newname>eval_u</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLeaf</name>
                        <newname>eval_t</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsLeftChild</name>
                        <newname>eval_v</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsRightChild</name>
                        <newname>eval_w</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_LeftChild</name>
                        <newname>eval_p</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Parent</name>
                        <newname>eval_r</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_RightChild</name>
                        <newname>eval_q</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;()</signature>
                        <name>get_Tree</name>
                        <newname>eval_s</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Value</name>
                        <newname>eval_o</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_LeftChild</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Parent</name>
                        <newname>eval_n</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_RightChild</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>set_Tree</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>set_Value</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>leftChild</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>parent</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>rightChild</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>value</name>
                        <newname>a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ChildCount</name>
                        <newname>eval_j</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasLeftChild</name>
                        <newname>eval_k</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>HasRightChild</name>
                        <newname>eval_l</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsInternal</name>
                        <newname>eval_g</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLeaf</name>
                        <newname>eval_f</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsLeftChild</name>
                        <newname>eval_h</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsRightChild</name>
                        <newname>eval_i</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>LeftChild</name>
                        <newname>eval_b</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>Parent</name>
                        <newname>eval_d</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>RightChild</name>
                        <newname>eval_c</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;()</signature>
                        <name>Tree</name>
                        <newname>e</newname>
                    </property>
                    <property>
                        <signature>!0()</signature>
                        <name>Value</name>
                        <newname>a</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1</name>
                <newname>eval_q</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(!0)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Clear</name>
                        <newname>h</newname>
                    </method>
                    <method>
                        <signature>int32(System.IComparable, System.IComparable)</signature>
                        <name>CompareElements</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Contains</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(!0[])</signature>
                        <name>CopyTo</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(!0[], int32)</signature>
                        <name>CopyTo</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;(!0)</signature>
                        <name>Find</name>
                        <newname>f</newname>
                    </method>
                    <method>
                        <signature>int32(!0)</signature>
                        <name>GetDepth</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>GetDepth</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetEnumerator</name>
                    </method>
                    <method>
                        <signature>int32(!0)</signature>
                        <name>GetHeight</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHeight</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>GetHeight</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetInOrderEnumerator</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetPostOrderEnumerator</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>GetPreOrderEnumerator</name>
                        <newname>eval_m</newname>
                    </method>
                    <method>
                        <signature>bool(!0)</signature>
                        <name>Remove</name>
                        <newname>eval_h</newname>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>Remove</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>eval_j</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Count</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_IsReadOnly</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>get_Root</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;()</signature>
                        <name>get_TraversalOrder</name>
                        <newname>eval_g</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>set_Root</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;)</signature>
                        <name>set_TraversalOrder</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Comparison`1&lt;System.IComparable&gt;</signature>
                        <name>comparer</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>head</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>size</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>traversalMode</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Count</name>
                        <newname>c</newname>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>IsReadOnly</name>
                        <newname>eval_b</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;()</signature>
                        <name>Root</name>
                        <newname>a</newname>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;()</signature>
                        <name>TraversalOrder</name>
                        <newname>eval_d</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/BinaryTreeInOrderEnumerator</name>
                <newname>eval_q/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>visitNode</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>current</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;&gt;</signature>
                        <name>traverseQueue</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Current</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                        <newname>eval_b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/BinaryTreePostOrderEnumerator</name>
                <newname>eval_q/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>visitNode</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>current</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;&gt;</signature>
                        <name>traverseQueue</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Current</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                        <newname>eval_b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/BinaryTreePreOrderEnumerator</name>
                <newname>eval_q/eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Reset</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>get_Current</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;)</signature>
                        <name>visitNode</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;</signature>
                        <name>current</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.DataTypes.BinaryTreeNode`1&lt;!0&gt;&gt;</signature>
                        <name>traverseQueue</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1&lt;!0&gt;</signature>
                        <name>tree</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>Current</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                        <newname>eval_b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode</name>
                <newname>eval_q/eval_a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>InOrder</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>PostOrder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.BinaryTree`1/TraversalMode&lt;!0&gt;</signature>
                        <name>PreOrder</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.OpenFileEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.OutcomeEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Successful</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Successful</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Successful&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.OutcomeEventArgs</signature>
                        <name>Failure</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.OutcomeEventArgs</signature>
                        <name>Success</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Successful</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.SaveFileEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.DataTypes.OutcomeEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.Sequence</name>
                <methodlist>
                    <method>
                        <signature>int32(object, object)</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object, object, object)</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>int32(object[])</signature>
                        <name>GetHashCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.DataTypes.UInt128</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(System.Numerics.BigInteger)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int64, unsigned int64)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], bool)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>Add</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>BitwiseAnd</name>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>CompareTo</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>LeftShift</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string, System.Globalization.NumberStyles)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string, System.Globalization.NumberStyles, System.IFormatProvider)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(string, System.IFormatProvider)</signature>
                        <name>Parse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>RightShift</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>Subtract</name>
                    </method>
                    <method>
                        <signature>System.Numerics.BigInteger()</signature>
                        <name>ToBigInteger</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>string(string, System.IFormatProvider)</signature>
                        <name>ToString</name>
                    </method>
                    <method>
                        <signature>bool(string, GeneralToolkitLib.DataTypes.UInt128&amp;)</signature>
                        <name>TryParse</name>
                    </method>
                    <method>
                        <signature>bool(string, System.Globalization.NumberStyles, System.IFormatProvider, GeneralToolkitLib.DataTypes.UInt128&amp;)</signature>
                        <name>TryParse</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Addition</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_BitwiseAnd</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Equality</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(System.Numerics.BigInteger)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>unsigned int64(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Explicit</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_GreaterThan</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_GreaterThanOrEqual</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(unsigned int64)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>System.Numerics.BigInteger(GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Implicit</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Inequality</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>op_LeftShift</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_LessThan</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_LessThanOrEqual</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, int32)</signature>
                        <name>op_RightShift</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.DataTypes.UInt128(GeneralToolkitLib.DataTypes.UInt128, GeneralToolkitLib.DataTypes.UInt128)</signature>
                        <name>op_Subtraction</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>MaxValue</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>MinValue</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>One</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>SizeOf</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.DataTypes.UInt128</signature>
                        <name>Zero</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>_leastSignificant</name>
                    </field>
                    <field>
                        <signature>unsigned int64</signature>
                        <name>_mostSignificant</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.CryptoProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.CryptoProgressHandler)</signature>
                        <name>Report</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>_storageManagerAsyncExProgres</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.CryptoProgressHandler</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_EncodedBytes</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_TotalBytes</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_EncodedBytes</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_TotalBytes</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;EncodedBytes&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;TotalBytes&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>EncodedBytes</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>TotalBytes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[]&amp;)</signature>
                        <name>DecodeString</name>
                    </method>
                    <method>
                        <signature>System.IO.MemoryStream(string, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>DecryptFileToMemoryStream</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;System.IO.MemoryStream&gt;(string, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>DecryptFileToMemoryStreamAsync</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[]&amp;, string)</signature>
                        <name>EncodeString</name>
                    </method>
                    <method>
                        <signature>bool(string, System.IO.MemoryStream, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>EncryptAndSaveFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(string, System.IO.MemoryStream, string, GeneralToolkitLib.Encryption.CryptoProgress)</signature>
                        <name>EncryptAndSaveFileAsync</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](object, string)</signature>
                        <name>EncryptObject</name>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>GetDerivedPassword</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>DERIVED_KEY</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_BUFFER_SIZE</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>SALT</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>SALT2</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;&gt;c__DisplayClass1</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;EncryptAndSaveFileAsync&gt;b__0</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>ms</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;&gt;c__DisplayClassa</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IO.MemoryStream()</signature>
                        <name>&lt;DecryptFileToMemoryStreamAsync&gt;b__9</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;DecryptFileToMemoryStreamAsync&gt;d__c</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_i</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_i</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;System.IO.MemoryStream&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;System.IO.MemoryStream&gt;</signature>
                        <name>&lt;&gt;u__$awaitere</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>&lt;result&gt;5__d</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager/&lt;&gt;c__DisplayClassa</signature>
                        <name>CS$&lt;&gt;8__localsb</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_k</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.EncryptionManager/&lt;EncryptAndSaveFileAsync&gt;d__3</name>
                <newname>GeneralToolkitLib.Encryption.EncryptionManager/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__$awaiter5</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;result&gt;5__4</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.EncryptionManager/&lt;&gt;c__DisplayClass1</signature>
                        <name>CS$&lt;&gt;8__locals2</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>filePath</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.IO.MemoryStream</signature>
                        <name>ms</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>passwordString</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.CryptoProgress</signature>
                        <name>progress</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_l</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.DataConverters.ObjectSerializer</name>
                <methodlist>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel(unsigned int8[])</signature>
                        <name>DeserializeLicenceData</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel(string)</signature>
                        <name>DeserializeLicenceDataFromString</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel(unsigned int8[])</signature>
                        <name>DeserializeRegistrationData</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel(string)</signature>
                        <name>DeserializeRegistrationDataFromString</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](object)</signature>
                        <name>SerializeDataContract</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>get_RegistrationData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RegistrationKey</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_ValidationHash</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>set_RegistrationData</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_RegistrationKey</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_ValidationHash</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</signature>
                        <name>&lt;RegistrationData&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;RegistrationKey&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;ValidationHash&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>RegistrationData</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RegistrationKey</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>ValidationHash</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Company</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo()</signature>
                        <name>get_ComputerId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FirstName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LastName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Salt</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_ValidTo</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_VersionName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Company</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.SysInfo)</signature>
                        <name>set_ComputerId</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FirstName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LastName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Salt</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_ValidTo</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_VersionName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Company&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo</signature>
                        <name>&lt;ComputerId&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FirstName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;LastName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Salt&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;ValidTo&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;VersionName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Company</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo()</signature>
                        <name>ComputerId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FirstName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LastName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Salt</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>ValidTo</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>VersionName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.LicenceService</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;LoadSystemInfo&gt;b__0</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitCompleted</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadLicenceFromFile</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>LoadSystemInfo</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>ValidateLicence</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_OnInitComplete</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Initialized</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService()</signature>
                        <name>get_Instance</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>get_LicenceData</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_RegistrationKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ValidLicence</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_OnInitComplete</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MAX_FILE_SIZE</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>OnInitComplete</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService</signature>
                        <name>_instance</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</signature>
                        <name>_licenceData</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService/LicenceServiceState</signature>
                        <name>_serviceState</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>initializing</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.SerialNumberManager</signature>
                        <name>serialNumberManager</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Initialized</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.LicenceService()</signature>
                        <name>Instance</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>LicenceData</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>RegistrationKey</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ValidLicence</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>OnInitComplete</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.LicenceService/LicenceServiceState</name>
                <newname>GeneralToolkitLib.Encryption.Licence.LicenceService/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo</signature>
                        <name>SystemInfo</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Valid</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>Validated</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.RegistrationDataManager</name>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.RegistrationDataManager(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>Create</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>SerializeToString</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>get_RegistrationData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</signature>
                        <name>_registrationData</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>RegistrationData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.SerialNumberManager</name>
                <methodlist>
                    <method>
                        <signature>void(System.Security.Cryptography.RSAParameters, GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>ConvertToBase32SerialNumber</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>CreateRegistrationKey</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], System.Security.Cryptography.RSAParameters)</signature>
                        <name>HashAndSign</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[], System.Security.Cryptography.RSAParameters)</signature>
                        <name>HashAndSignBytes</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>ValidateRegistrationData</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>VerifyRegistrationKey</name>
                    </method>
                    <method>
                        <signature>bool(unsigned int8[], unsigned int8[], System.Security.Cryptography.RSAParameters)</signature>
                        <name>VerifySignedHash</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>get_LicenceData</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel)</signature>
                        <name>set_LicenceData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>KeyFormat</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>VALIDATION_HASH_LENTH</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</signature>
                        <name>_app</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</signature>
                        <name>_licenceData</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.RSAParameters</signature>
                        <name>_rsaPubKey</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel()</signature>
                        <name>LicenceData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</signature>
                        <name>SearchForDuplicates</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApp</signature>
                        <name>SecureMemo</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/PrivateKeys</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/eval_a/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>GeneralToolkitLib</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/PublicKeys</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/eval_a/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>GeneralToolkitLib</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SearchForDuplicates</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>SecureMEMO</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/SaltData</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/eval_a/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>GeneralToolkit</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/SearchForDuplicates</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/eval_a/eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>SEARCH_FOR_DUPLICATES</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Versions</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/ProtectedApplications/SecureMemo</name>
                <newname>GeneralToolkitLib.Encryption.Licence.StaticData.SerialNumbersSettings/eval_a/eval_e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>SECURE_MEMO_BASE</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string[]</signature>
                        <name>Versions</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.SysInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ComputerId</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SignedHash</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ComputerId</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_SignedHash</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>_computerId</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_signedHash</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>ComputerId</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SignedHash</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.Licence.SysInfoManager</name>
                <methodlist>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.SysInfo()</signature>
                        <name>GetComputerId</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSAKeySetIdentity</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NickName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NickName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>RSA_GUID</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RSA_PrivateKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>RSA_PublicKey</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_nickName</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>NickName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSALocalCryptoKeyManager</name>
                <newname>eval_s</newname>
                <methodlist>
                    <method>
                        <signature>System.Security.Cryptography.RSAParameters()</signature>
                        <name>GetAssemblyRsaParameters</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.RSAKeySetIdentity()</signature>
                        <name>GetLocalKeySetIdentity</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string, System.Security.Cryptography.RSAParameters)</signature>
                        <name>DecryptObjectUsingRSA</name>
                    </method>
                    <method>
                        <signature>string(string, System.Security.Cryptography.RSAParameters)</signature>
                        <name>EncryptObjectUsingRSA</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.RSAKeySetIdentity(GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize)</signature>
                        <name>GenerateRSAKeyPair</name>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.RSAParameters(GeneralToolkitLib.Encryption.RSAKeySetIdentity)</signature>
                        <name>ParseRSAKeyInfo</name>
                    </method>
                    <method>
                        <signature>System.Security.Cryptography.RSAParameters(GeneralToolkitLib.Encryption.RSAKeySetIdentity)</signature>
                        <name>ParseRSAPublicKeyOnlyInfo</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>BEGIN_RSA_PRIVATE_KEY</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>BEGIN_RSA_PUBLIC_KEY</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>END_RSA_PRIVATE_KEY</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>END_RSA_PUBLIC_KEY</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b1024</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b16384</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b2048</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b4096</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.RSA_AsymetricEncryption/RSAKeySize</signature>
                        <name>b8192</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GeneralToolkitLib.Events.Unsubscriber`1</name>
                <methodlist>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;System.IObserver`1&lt;!0&gt;&gt;, System.IObserver`1&lt;!0&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Dispose</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.IObserver`1&lt;!0&gt;</signature>
                        <name>_observer</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;System.IObserver`1&lt;!0&gt;&gt;</signature>
                        <name>_observers</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.CRC32</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(System.IProgress`1&lt;GeneralToolkitLib.Hashing.HashProgress&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int32)</signature>
                        <name>GetBigEndianBytes</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int32, bool)</signature>
                        <name>GetBigEndianBytes</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetCRC326HashAsHexString</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>MaxMemoryUsage</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Hashing.HashProgress&gt;</signature>
                        <name>_progress</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.HashProgress</signature>
                        <name>hashProgress</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.CRC32/CRC32Table</name>
                <newname>GeneralToolkitLib.Hashing.CRC32/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int32[]</signature>
                        <name>dwCRC32Table</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumFileGenerator</name>
                <methodlist>
                    <method>
                        <signature>void(string, System.IProgress`1&lt;GeneralToolkitLib.Hashing.ChecksumProgress&gt;)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(int64, int32)</signature>
                        <name>FormatFileSize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateMD5File</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateMD5FileAsync</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateSFVFile</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.StringCollection, string)</signature>
                        <name>GenrateSFVFileAsync</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>CHECKSUM_FILE_HEADER</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>CHECKSUM_FILE_INFO</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_applicationName</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Hashing.ChecksumProgress&gt;</signature>
                        <name>_progress</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.ChecksumProgress</signature>
                        <name>checksumProgress</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_f</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumFileGenerator/&lt;&gt;c__DisplayClass1</name>
                <newname>GeneralToolkitLib.Hashing.ChecksumFileGenerator/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GenrateSFVFileAsync&gt;b__0</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.ChecksumFileGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.StringCollection</signature>
                        <name>filePathCollection</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sfvFilename</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumFileGenerator/&lt;&gt;c__DisplayClass4</name>
                <newname>GeneralToolkitLib.Hashing.ChecksumFileGenerator/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;GenrateMD5FileAsync&gt;b__3</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Hashing.ChecksumFileGenerator</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Specialized.StringCollection</signature>
                        <name>filePathCollection</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>sfvFilename</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.ChecksumProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_Completed</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DataRead</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FilesCompleted</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FilesTotal</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_TotalProgress</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_Completed</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_DataRead</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FilesCompleted</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FilesTotal</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_TotalProgress</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;Completed&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;DataRead&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FilesCompleted&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FilesTotal&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;TotalProgress&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>bool()</signature>
                        <name>Completed</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>DataRead</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FilesCompleted</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FilesTotal</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>TotalProgress</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.HashProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesHashed</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_BytesTotal</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_BytesHashed</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_BytesTotal</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;BytesHashed&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;BytesTotal&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesHashed</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>BytesTotal</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.IHashTransform</name>
                <methodlist>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.MD5</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>ComputeHashOnString</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetMD5HashAsHexString</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Hashing.HashProgress)</signature>
                        <name>Report</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Cryptography.HashAlgorithm</signature>
                        <name>md5Implementation</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Hashing.SHA256</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](System.IO.Stream)</signature>
                        <name>ComputeHash</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](unsigned int8[])</signature>
                        <name>GetSHA256HashAsByteArray</name>
                    </method>
                    <method>
                        <signature>string(unsigned int8[])</signature>
                        <name>GetSHA256HashAsHexString</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Hashing.HashProgress)</signature>
                        <name>Report</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_HashSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>HashSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Log.LogWriter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>System.Exception(System.Exception)</signature>
                        <name>&lt;BuildExceptionMessage&gt;b__1</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>string(System.Exception)</signature>
                        <name>&lt;BuildExceptionMessage&gt;b__2</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>bool(!!0)</signature>
                        <name>&lt;FromHierarchy&gt;b__9</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(System.Exception)</signature>
                        <name>BuildExceptionMessage</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(!!0, System.Func`2&lt;!!0,!!0&gt;)</signature>
                        <name>FromHierarchy</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Collections.Generic.IEnumerable`1&lt;!!0&gt;(!!0, System.Func`2&lt;!!0,!!0&gt;, System.Func`2&lt;!!0,bool&gt;)</signature>
                        <name>FromHierarchy</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string, System.Exception)</signature>
                        <name>LogError</name>
                    </method>
                    <method>
                        <signature>void(string, GeneralToolkitLib.Log.LogWriter/LogLevel)</signature>
                        <name>LogMessage</name>
                    </method>
                    <method>
                        <signature>void(string, bool, GeneralToolkitLib.Log.LogWriter/LogLevel)</signature>
                        <name>WriteLog</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`2&lt;System.Exception,System.Exception&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;System.Exception,string&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate4</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>ErrorLogPrefix</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>StandardLogPrefix</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>ThreadLock</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_basePath</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>TSource</name>
                    <newname>eval_a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Log.LogWriter/&lt;FromHierarchy&gt;d__5`1</name>
                <newname>GeneralToolkitLib.Log.LogWriter/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>MoveNext</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.IEnumerator`1&lt;!0&gt;()</signature>
                        <name>System.Collections.Generic.IEnumerable&lt;TSource&gt;.GetEnumerator</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TSource&gt;.get_Current</name>
                        <newname>eval_k</newname>
                    </method>
                    <method>
                        <signature>System.Collections.IEnumerator()</signature>
                        <name>System.Collections.IEnumerable.GetEnumerator</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.Collections.IEnumerator.Reset</name>
                        <newname>eval_l</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.get_Current</name>
                        <newname>eval_n</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>System.IDisposable.Dispose</name>
                        <newname>eval_m</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;&gt;2__current</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,bool&gt;</signature>
                        <name>&lt;&gt;3__canContinue</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,!0&gt;</signature>
                        <name>&lt;&gt;3__nextItem</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;&gt;3__source</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;l__initialThreadId</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>&lt;current&gt;5__6</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,bool&gt;</signature>
                        <name>canContinue</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Func`2&lt;!0,!0&gt;</signature>
                        <name>nextItem</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>!0</signature>
                        <name>source</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>!0()</signature>
                        <name>System.Collections.Generic.IEnumerator&lt;TSource&gt;.Current</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>System.Collections.IEnumerator.Current</name>
                        <newname>eval_b</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Log.LogWriter/LogLevel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Log.LogWriter/LogLevel</signature>
                        <name>Debug</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Log.LogWriter/LogLevel</signature>
                        <name>Error</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Log.LogWriter/LogLevel</signature>
                        <name>Info</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Log.LogWriter/LogLevel</signature>
                        <name>Warning</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.Authenticator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>ConstantTimeEquals</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GenerateKey</name>
                    </method>
                    <method>
                        <signature>string(string, unsigned int64)</signature>
                        <name>GetCodeInternal</name>
                    </method>
                    <method>
                        <signature>int32(int32)</signature>
                        <name>RandomInt</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>AvailableKeyChars</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>KeyLength</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Security.Cryptography.RNGCryptoServiceProvider</signature>
                        <name>Random</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.CounterAuthenticator</name>
                <methodlist>
                    <method>
                        <signature>void(int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int64)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>bool(string, string, unsigned int64, unsigned int64&amp;)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>string(string, unsigned int64)</signature>
                        <name>GetCode</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>WindowSize</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.GoogleAuthenticator</name>
                <methodlist>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_AuthenticatorLabel</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyUri</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Secret</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_AuthenticatorLabel</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Secret</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;AuthenticatorLabel&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Secret&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>AuthenticatorLabel</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyUri</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Secret</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.IUsedCodesManager</name>
                <methodlist>
                    <method>
                        <signature>void(int64, string, object)</signature>
                        <name>AddCode</name>
                    </method>
                    <method>
                        <signature>bool(int64, string, object)</signature>
                        <name>IsCodeUsed</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.TimeAuthenticator</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.OTP.IUsedCodesManager, System.Func`1&lt;System.DateTime&gt;, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.OTP.IUsedCodesManager()</signature>
                        <name>&lt;.cctor&gt;b__2</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>&lt;.ctor&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>bool(string, string)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>bool(string, string, object)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>bool(string, string, object, System.DateTime&amp;)</signature>
                        <name>CheckCode</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetCode</name>
                    </method>
                    <method>
                        <signature>string(string, System.DateTime)</signature>
                        <name>GetCode</name>
                    </method>
                    <method>
                        <signature>int64(System.DateTime)</signature>
                        <name>GetInterval</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Func`1&lt;System.DateTime&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate1</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;GeneralToolkitLib.OTP.IUsedCodesManager&gt;</signature>
                        <name>CS$&lt;&gt;9__CachedAnonymousMethodDelegate3</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Lazy`1&lt;GeneralToolkitLib.OTP.IUsedCodesManager&gt;</signature>
                        <name>DefaultUsedCodeManager</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>IntervalSeconds</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Func`1&lt;System.DateTime&gt;</signature>
                        <name>NowFunc</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.OTP.IUsedCodesManager</signature>
                        <name>UsedCodeManager</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.UsedCodesManager</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(int64, string, object)</signature>
                        <name>AddCode</name>
                    </method>
                    <method>
                        <signature>bool(int64, string, object)</signature>
                        <name>IsCodeUsed</name>
                    </method>
                    <method>
                        <signature>void(object, System.Timers.ElapsedEventArgs)</signature>
                        <name>cleaner_Elapsed</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Timers.Timer</signature>
                        <name>cleaner</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.Queue`1&lt;GeneralToolkitLib.OTP.UsedCodesManager/UsedCode&gt;</signature>
                        <name>codes</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>System.TimeSpan</signature>
                        <name>lockingTimeout</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Threading.ReaderWriterLock</signature>
                        <name>rwlock</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.OTP.UsedCodesManager/UsedCode</name>
                <newname>GeneralToolkitLib.OTP.UsedCodesManager/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(int64, string, object)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>Equals</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>GetHashCode</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>ToString</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Code</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_Timestamp</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_UseDate</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_User</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Code</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_Timestamp</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_UseDate</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_User</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Code&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;Timestamp&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;UseDate&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;User&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>Code</name>
                        <newname>c</newname>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>Timestamp</name>
                        <newname>eval_b</newname>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>UseDate</name>
                        <newname>eval_a</newname>
                    </property>
                    <property>
                        <signature>object()</signature>
                        <name>User</name>
                        <newname>d</newname>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Properties.Resources</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>get_Culture</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>get_ResourceManager</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.Globalization.CultureInfo)</signature>
                        <name>set_Culture</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Globalization.CultureInfo</signature>
                        <name>resourceCulture</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Resources.ResourceManager</signature>
                        <name>resourceMan</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Globalization.CultureInfo()</signature>
                        <name>Culture</name>
                    </property>
                    <property>
                        <signature>System.Resources.ResourceManager()</signature>
                        <name>ResourceManager</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Properties.Settings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.Configuration.SettingChangingEventArgs)</signature>
                        <name>SettingChangingEventHandler</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.ComponentModel.CancelEventArgs)</signature>
                        <name>SettingsSavingEventHandler</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_BaseLogPath</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Properties.Settings()</signature>
                        <name>get_Default</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogFileExtension</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_LogPrefix</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_BaseLogPath</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogFileExtension</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_LogPrefix</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Properties.Settings</signature>
                        <name>defaultInstance</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>BaseLogPath</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Properties.Settings()</signature>
                        <name>Default</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LogFileExtension</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>LogPrefix</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteCompletelySilent</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>MoveToRecycleBin</name>
                    </method>
                    <method>
                        <signature>int32(GeneralToolkitLib.Storage.FileOperationAPIWrapper/SHFILEOPSTRUCT&amp;)</signature>
                        <name>SHFileOperation</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>bool(string, GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags)</signature>
                        <name>Send</name>
                    </method>
                    <method>
                        <signature>bool(string, GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags)</signature>
                        <name>deleteFile</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_ALLOWUNDO</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_NOCONFIRMATION</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_NOERRORUI</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_SILENT</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_SIMPLEPROGRESS</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>FOF_WANTNUKEWARNING</name>
                    </field>
                    <field>
                        <signature>unsigned int16</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_COPY</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_DELETE</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_MOVE</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>FO_RENAME</name>
                    </field>
                    <field>
                        <signature>unsigned int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.FileOperationAPIWrapper/SHFILEOPSTRUCT</name>
                <newname>GeneralToolkitLib.Storage.FileOperationAPIWrapper/eval_a</newname>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>fAnyOperationsAborted</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationFlags</signature>
                        <name>fFlags</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hNameMappings</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>native int</signature>
                        <name>hwnd</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>lpszProgressTitle</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pFrom</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>pTo</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.FileOperationAPIWrapper/FileOperationType</signature>
                        <name>wFunc</name>
                        <newname>b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Filesystem.XMLDataElement</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Collections.Specialized.NameValueCollection()</signature>
                        <name>get_ElementProperties</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ElementType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ElementValue</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Specialized.NameValueCollection)</signature>
                        <name>set_ElementProperties</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ElementType</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ElementValue</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Specialized.NameValueCollection</signature>
                        <name>&lt;ElementProperties&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ElementType&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ElementValue&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Specialized.NameValueCollection()</signature>
                        <name>ElementProperties</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ElementType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ElementValue</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Filesystem.XMLImporter</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>LoadXMLFile</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Filesystem.XMLDataElement&gt;()</signature>
                        <name>get_XMLDocumentNodes</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Filesystem.XMLDataElement&gt;</signature>
                        <name>_dataElementList</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Filesystem.XMLDataElement&gt;()</signature>
                        <name>XMLDocumentNodes</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.IStorageManager</name>
                <methodlist>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFileAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFile</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Threading.Tasks.Task`1&lt;!!0&gt;(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFileAsync</name>
                    </method>
                    <method>
                        <signature>bool(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFileAsync</name>
                    </method>
                </methodlist>
                <fieldlist />
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Memory.PasswordStorage</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>Get</name>
                    </method>
                    <method>
                        <signature>void(string, string)</signature>
                        <name>Set</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.Dictionary`2&lt;string,GeneralToolkitLib.Storage.Memory.PasswordStorage/PasswordStorageItem&gt;</signature>
                        <name>_encodedDataDictionary</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Memory.PasswordStorage/PasswordStorageItem</name>
                <newname>GeneralToolkitLib.Storage.Memory.PasswordStorage/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>Data</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>PaddingLength</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.ArchiveFile</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFile(System.IO.FileInfo)</signature>
                        <name>CreateArchiveFile</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>GetFileInfoToBytes</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToBytes</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_EndPosition</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFileInfo()</signature>
                        <name>get_FileInfo</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileInfoOffsetBytes</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_StartPosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UncompressedFileSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_EndPosition</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.ArchiveFileInfo)</signature>
                        <name>set_FileInfo</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileInfoOffsetBytes</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_StartPosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UncompressedFileSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;CompressedFileSize&gt;k__BackingField</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;EndPosition&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFileInfo</signature>
                        <name>&lt;FileInfo&gt;k__BackingField</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileInfoOffsetBytes&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;StartPosition&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;UncompressedFileSize&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BaseAllocSize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_g</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>CompressedFileSize</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>EndPosition</name>
                    </property>
                    <property>
                        <signature>GeneralToolkitLib.Storage.Models.ArchiveFileInfo()</signature>
                        <name>FileInfo</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileInfoOffsetBytes</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>StartPosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UncompressedFileSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.ArchiveFileInfo</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_Attributes</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>get_CRC32</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_CreationTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Extension</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_FileSize</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullName</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_FullPath</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>System.DateTime()</signature>
                        <name>get_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Name</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_Attributes</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[])</signature>
                        <name>set_CRC32</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_CompressedFileSize</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_CreationTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Extension</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_FileSize</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullName</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_FullPath</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastAccessTime</name>
                    </method>
                    <method>
                        <signature>void(System.DateTime)</signature>
                        <name>set_LastWriteTime</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Name</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;Attributes&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>&lt;CRC32&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;CompressedFileSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;CreationTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Extension&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;FileSize&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FullName&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;FullPath&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastAccessTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>System.DateTime</signature>
                        <name>&lt;LastWriteTime&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Name&gt;k__BackingField</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>Attributes</name>
                    </property>
                    <property>
                        <signature>unsigned int8[]()</signature>
                        <name>CRC32</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>CompressedFileSize</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>CreationTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Extension</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>FileSize</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullName</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>FullPath</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastAccessTime</name>
                    </property>
                    <property>
                        <signature>System.DateTime()</signature>
                        <name>LastWriteTime</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Name</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.CompressionArchive</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.CompressionArchive(System.IO.Stream)</signature>
                        <name>DecodeHeader</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>VerifyFileHeader</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;()</signature>
                        <name>get_ArchiveFiles</name>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;)</signature>
                        <name>set_ArchiveFiles</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;</signature>
                        <name>&lt;ArchiveFiles&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderEndBytes</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderIdentifierBytes</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HeaderPropertiesAllocSize</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.ArchiveFile&gt;()</signature>
                        <name>ArchiveFiles</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.CompressionBlock</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_CompressedBlockSize</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_EndPosition</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_StartPosition</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_UncompressedBlockSize</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_CompressedBlockSize</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_EndPosition</name>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_StartPosition</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_UncompressedBlockSize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;CompressedBlockSize&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;EndPosition&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;StartPosition&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;UncompressedBlockSize&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>BlockAllocSize</name>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>CompressedBlockSize</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>EndPosition</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>StartPosition</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>UncompressedBlockSize</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.CompressionFileHeader</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.cctor</name>
                    </method>
                    <method>
                        <signature>void(int64, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.CompressionFileHeader(System.IO.Stream)</signature>
                        <name>DecodeHeader</name>
                    </method>
                    <method>
                        <signature>unsigned int8[]()</signature>
                        <name>ToBytes</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.Stream)</signature>
                        <name>VerifyFileHeader</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_BlockSize</name>
                    </method>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;()</signature>
                        <name>get_CompressedDataBlocks</name>
                    </method>
                    <method>
                        <signature>int64()</signature>
                        <name>get_DecompressedFileSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_FileHeaderSize</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberOfBlocks</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_BlockSize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;)</signature>
                        <name>set_CompressedDataBlocks</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int64)</signature>
                        <name>set_DecompressedFileSize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_FileHeaderSize</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NumberOfBlocks</name>
                        <newname>eval_c</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;BlockSize&gt;k__BackingField</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;</signature>
                        <name>&lt;CompressedDataBlocks&gt;k__BackingField</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>int64</signature>
                        <name>&lt;DecompressedFileSize&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;FileHeaderSize&gt;k__BackingField</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NumberOfBlocks&gt;k__BackingField</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderEndBytes</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>unsigned int8[]</signature>
                        <name>HeaderIdentifierBytes</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>HeaderPropertiesAllocSize</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_i</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>BlockSize</name>
                    </property>
                    <property>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.Storage.Models.CompressionBlock&gt;()</signature>
                        <name>CompressedDataBlocks</name>
                    </property>
                    <property>
                        <signature>int64()</signature>
                        <name>DecompressedFileSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>FileHeaderSize</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>NumberOfBlocks</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.DataAccessEventArgs</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DataRead</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_DataWritten</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DataRead</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_DataWritten</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DataRead&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;DataWritten&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>DataRead</name>
                    </property>
                    <property>
                        <signature>int32()</signature>
                        <name>DataWritten</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</name>
                <methodlist>
                    <method>
                        <signature>void(object, native int)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.IAsyncResult(object, GeneralToolkitLib.Storage.Models.DataAccessEventArgs, System.AsyncCallback, object)</signature>
                        <name>BeginInvoke</name>
                    </method>
                    <method>
                        <signature>void(System.IAsyncResult)</signature>
                        <name>EndInvoke</name>
                    </method>
                    <method>
                        <signature>void(object, GeneralToolkitLib.Storage.Models.DataAccessEventArgs)</signature>
                        <name>Invoke</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.ProgressMemoryStream</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32(unsigned int8[], int32, int32)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ReadByte</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8[], int32, int32)</signature>
                        <name>Write</name>
                    </method>
                    <method>
                        <signature>void(unsigned int8)</signature>
                        <name>WriteByte</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>add_OnDataRead</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>add_OnDataWritten</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>remove_OnDataRead</name>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.DataAccessEventHandler)</signature>
                        <name>remove_OnDataWritten</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataRead</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataWritten</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist>
                    <event>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataRead</name>
                    </event>
                    <event>
                        <signature>GeneralToolkitLib.Storage.Models.DataAccessEventHandler</signature>
                        <name>OnDataWritten</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.StorageManagerProgress</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_ProgressPercentage</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Text</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_ProgressPercentage</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Text</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Text&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_progressPercentage</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>ProgressPercentage</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Text</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Models.StorageManagerSettings</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool, int32, bool, string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Storage.Models.StorageManagerSettings()</signature>
                        <name>GetDefaultSettings</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>get_NumberOfThreads</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_Password</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseEncryption</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_UseMultithreading</name>
                    </method>
                    <method>
                        <signature>void(int32)</signature>
                        <name>set_NumberOfThreads</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_Password</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseEncryption</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_UseMultithreading</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;NumberOfThreads&gt;k__BackingField</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>&lt;Password&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseEncryption&gt;k__BackingField</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;UseMultithreading&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>int32()</signature>
                        <name>NumberOfThreads</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>Password</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseEncryption</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>UseMultithreading</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryAccess</name>
                <methodlist>
                    <method>
                        <signature>void(string)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(string)</signature>
                        <name>DeleteKey</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>DeleteSubKeyTree</name>
                    </method>
                    <method>
                        <signature>object(string)</signature>
                        <name>Read</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0()</signature>
                        <name>ReadObjectFromRegistry</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>SaveObjectToRegistry</name>
                    </method>
                    <method>
                        <signature>void(System.Exception, string)</signature>
                        <name>ShowErrorMessage</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>SubKeyCount</name>
                    </method>
                    <method>
                        <signature>int32()</signature>
                        <name>ValueCount</name>
                    </method>
                    <method>
                        <signature>bool(GeneralToolkitLib.Storage.Registry.RegistryDataTypes)</signature>
                        <name>Write</name>
                        <newname>a</newname>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryKey()</signature>
                        <name>get_BaseRegistryKey</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_ProductName</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ShowError</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_SubKey</name>
                    </method>
                    <method>
                        <signature>void(Microsoft.Win32.RegistryKey)</signature>
                        <name>set_BaseRegistryKey</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_ProductName</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_ShowError</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;ProductName&gt;k__BackingField</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>Microsoft.Win32.RegistryKey</signature>
                        <name>_baseRegistryKey</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_showError</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_subKey</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>Microsoft.Win32.RegistryKey()</signature>
                        <name>BaseRegistryKey</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>ProductName</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ShowError</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>SubKey</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeDWORD</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_data</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeMultiString</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Collections.Generic.List`1&lt;string&gt;</signature>
                        <name>_multiStringData</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypeString</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;KeyName&gt;k__BackingField</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>_data</name>
                        <newname>a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.Registry.RegistryDataTypes</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>object()</signature>
                        <name>get_Data</name>
                    </method>
                    <method>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>get_DataType</name>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_KeyName</name>
                    </method>
                    <method>
                        <signature>void(object)</signature>
                        <name>set_Data</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_KeyName</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>object()</signature>
                        <name>Data</name>
                    </property>
                    <property>
                        <signature>Microsoft.Win32.RegistryValueKind()</signature>
                        <name>DataType</name>
                    </property>
                    <property>
                        <signature>string()</signature>
                        <name>KeyName</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager</name>
                <methodlist>
                    <method>
                        <signature>void(GeneralToolkitLib.Storage.Models.StorageManagerSettings)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task(System.IO.Stream, System.IO.Stream, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>CompressData</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, GeneralToolkitLib.Compression.SevenZip.CodeProgressImplementation)</signature>
                        <name>CompressDataMultithreaded</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(System.Collections.Generic.List`1&lt;string&gt;, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>CompressFileAsync</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeSerializeAndDecompressObjectFromEncryptedFile</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeSerializeAndDecompressObjectFromFile</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task(System.IO.Stream, System.IO.Stream, int64, GeneralToolkitLib.Compression.SevenZip.ICodeProgress)</signature>
                        <name>DeflateData</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.IO.Stream, System.IO.Stream, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeflateDataMultithreded</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>!!0(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFile</name>
                    </method>
                    <method>
                        <arity>1</arity>
                        <signature>System.Threading.Tasks.Task`1&lt;!!0&gt;(string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>DeserializeObjectFromFileAsync</name>
                    </method>
                    <method>
                        <signature>bool(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeAndCompressObjectToFile</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>System.IO.MemoryStream(object, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeAndCompressObjectToMemoryStream</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>bool(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFile</name>
                    </method>
                    <method>
                        <signature>System.Threading.Tasks.Task`1&lt;bool&gt;(object, string, System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;)</signature>
                        <name>SerializeObjectToFileAsync</name>
                    </method>
                    <method>
                        <signature>bool(object)</signature>
                        <name>VerifyObjectToSerialize</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>BlockSize</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.Models.StorageManagerSettings</signature>
                        <name>_settings</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass1</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>&lt;SerializeObjectToFileAsync&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>obj</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>c</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass1a</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/eval_e</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;CompressData&gt;b__19</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>inputSize</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>inputStream</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>outStream</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.ICodeProgress</signature>
                        <name>progress</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass1d</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/eval_f</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>&lt;DeflateData&gt;b__1c</name>
                        <newname>eval_e</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int64</signature>
                        <name>compressedSize</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>inputStream</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.IO.Stream</signature>
                        <name>outStream</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Compression.SevenZip.ICodeProgress</signature>
                        <name>progress</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_e</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass7`1</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/eval_c</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>!0()</signature>
                        <name>&lt;DeserializeObjectFromFileAsync&gt;b__6</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>b</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;DeserializeObjectFromFileAsync&gt;d__9`1</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/eval_d</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;!0&gt;</signature>
                        <name>&lt;&gt;u__$awaitera</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass7`1&lt;!0&gt;</signature>
                        <name>CS$&lt;&gt;8__locals8</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_i</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManager/&lt;SerializeObjectToFileAsync&gt;d__3</name>
                <newname>GeneralToolkitLib.Storage.StorageManager/eval_b</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>MoveNext</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(System.Runtime.CompilerServices.IAsyncStateMachine)</signature>
                        <name>SetStateMachine</name>
                        <newname>eval_d</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>int32</signature>
                        <name>&lt;&gt;1__state</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager</signature>
                        <name>&lt;&gt;4__this</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;t__builder</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>&lt;&gt;t__stack</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Runtime.CompilerServices.TaskAwaiter`1&lt;bool&gt;</signature>
                        <name>&lt;&gt;u__$awaiter4</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Storage.StorageManager/&lt;&gt;c__DisplayClass1</signature>
                        <name>CS$&lt;&gt;8__locals2</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>object</signature>
                        <name>obj</name>
                        <newname>d</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>path</name>
                        <newname>e</newname>
                    </field>
                    <field>
                        <signature>System.IProgress`1&lt;GeneralToolkitLib.Storage.Models.StorageManagerProgress&gt;</signature>
                        <name>progress</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Storage.StorageManagerBase</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>CreateFilePathIfItDoesNotExist</name>
                    </method>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetDirectoryFromFullPath</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.CreateAndVerifyOTP</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>CreateAndVerifyOTP_Load</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GenerateQRCode</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void(string, int32)</signature>
                        <name>Init</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel)</signature>
                        <name>SetVisiblePanel</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CancelClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>add_CodeVerified</name>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCancel_Click</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnPrevious_Click</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnShowVerificationPanel_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnVerifyCode_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.OTP.GoogleAuthenticator()</signature>
                        <name>get_GoogleAuthenticator</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_OTPVerificationCompleted</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CancelClicked</name>
                    </method>
                    <method>
                        <signature>void(System.EventHandler)</signature>
                        <name>remove_CodeVerified</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>set_OTPVerificationCompleted</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>&lt;OTPVerificationCompleted&gt;k__BackingField</name>
                        <newname>eval_x</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CancelClicked</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.EventHandler</signature>
                        <name>CodeVerified</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.OTP.GoogleAuthenticator</signature>
                        <name>_googleAuthenticator</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>_initialized</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Barcode.QRCodeGenerator</signature>
                        <name>_qrCodeGenerator</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Drawing.Image</signature>
                        <name>_qrCodeImage</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.OTP.TimeAuthenticator</signature>
                        <name>_timeAuthenticator</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCancel</name>
                        <newname>eval_p</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnPrevious</name>
                        <newname>eval_t</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnShowVerificationPanel</name>
                        <newname>eval_m</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnVerifyCode</name>
                        <newname>eval_u</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpShowQR</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpVerifyOTP</name>
                        <newname>eval_q</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>eval_s</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>eval_w</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.PictureBox</signature>
                        <name>pictureBoxQRCode</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>pnlGenerateOTP</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Panel</signature>
                        <name>pnlVerifyOTP</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_y</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtOTPCodeToVerify</name>
                        <newname>eval_r</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtOTPSecret</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtVerifyResult</name>
                        <newname>eval_v</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.OTP.GoogleAuthenticator()</signature>
                        <name>GoogleAuthenticator</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>OTPVerificationCompleted</name>
                    </property>
                </propertylist>
                <eventlist>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CancelClicked</name>
                    </event>
                    <event>
                        <signature>System.EventHandler</signature>
                        <name>CodeVerified</name>
                    </event>
                </eventlist>
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel</signature>
                        <name>CreateQR</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.UserControls.CreateAndVerifyOTP/OTPPanel</signature>
                        <name>VerifyOTP</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.CreateLicenceRequestControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnGenerate_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>get_RegistrationData</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel</signature>
                        <name>_registrationData</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.RegistrationDataManager</signature>
                        <name>_registrationDataManager</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnGenerate</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>groupBox1</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label3</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label4</name>
                        <newname>eval_l</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>lblInfo</name>
                        <newname>eval_n</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_o</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtCompany</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtFirstName</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtLastName</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.RichTextBox</signature>
                        <name>txtLicenceRequest</name>
                        <newname>eval_m</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel()</signature>
                        <name>RegistrationData</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.UserControls.LicenceInfoControl</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void(bool)</signature>
                        <name>Dispose</name>
                    </method>
                    <method>
                        <signature>string(GeneralToolkitLib.Encryption.Licence.DataModels.RegistrationDataModel)</signature>
                        <name>GetRegistrationDetails</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitControlState</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel)</signature>
                        <name>InitLicenceData</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>InitializeComponent</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>LicenceInfoControl_Load</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnCreateRequest_Click</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void(object, System.EventArgs)</signature>
                        <name>btnEnterLicence_Click</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>get_NotRegisteredInfoText</name>
                    </method>
                    <method>
                        <signature>bool()</signature>
                        <name>get_ValidLicence</name>
                    </method>
                    <method>
                        <signature>void(string)</signature>
                        <name>set_NotRegisteredInfoText</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>&lt;NotRegisteredInfoText&gt;k__BackingField</name>
                        <newname>eval_j</newname>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>CreateRequest</name>
                    </field>
                    <field>
                        <signature>System.Action</signature>
                        <name>EnterLicence</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Encryption.Licence.DataModels.LicenceDataModel</signature>
                        <name>_licenceData</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnCreateRequest</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Button</signature>
                        <name>btnEnterLicence</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>System.ComponentModel.IContainer</signature>
                        <name>components</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.GroupBox</signature>
                        <name>grpLicence</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label1</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.Label</signature>
                        <name>label2</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_k</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtComputerId</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>System.Windows.Forms.TextBox</signature>
                        <name>txtLicenceInfo</name>
                        <newname>eval_d</newname>
                    </field>
                </fieldlist>
                <propertylist>
                    <property>
                        <signature>string()</signature>
                        <name>NotRegisteredInfoText</name>
                    </property>
                    <property>
                        <signature>bool()</signature>
                        <name>ValidLicence</name>
                    </property>
                </propertylist>
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.DataConverters.IniConfigFileSectionSerializer</name>
                <methodlist>
                    <method>
                        <signature>System.Collections.Generic.List`1&lt;GeneralToolkitLib.ConfigHelper.IniConfigFileSection&gt;(object)</signature>
                        <name>Serialize</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[])</signature>
                        <name>DeserializeBinaryFormatterObjectDataInternal</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[], bool)</signature>
                        <name>DeserializeObjectFromByteArray</name>
                    </method>
                    <method>
                        <signature>!0(string, GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat&lt;!0&gt;, bool)</signature>
                        <name>DeserializeObjectFromString</name>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[])</signature>
                        <name>DeserializeProtoBufferObjectDataInternal</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>SerializeToByteArray</name>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>SerializeUsingBinaryFormatterInternal</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>SerializeUsingProtoBuffersInternal</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                </genericparameter>
                <name>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat</name>
                <methodlist />
                <fieldlist>
                    <field>
                        <signature>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat&lt;!0&gt;</signature>
                        <name>Base64</name>
                    </field>
                    <field>
                        <signature>GeneralToolkitLib.Utility.DataConverters.ObjectSerializer`1/StringSerializationFormat&lt;!0&gt;</signature>
                        <name>Hex</name>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>value__</name>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <arity>1</arity>
                <genericparameter sequence="0">
                    <name>T</name>
                    <newname>a</newname>
                </genericparameter>
                <name>GeneralToolkitLib.Utility.DataConverters.RawSerializer`1</name>
                <newname>eval_t</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[])</signature>
                        <name>RawDeserialize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>!0(unsigned int8[], int32)</signature>
                        <name>RawDeserialize</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>unsigned int8[](!0)</signature>
                        <name>RawSerialize</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.DelayOperation</name>
                <newname>eval_v</newname>
                <methodlist>
                    <method>
                        <signature>void(object)</signature>
                        <name>CallBack</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(System.Action, int32)</signature>
                        <name>DelayAction</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.DelayOperation/DelayedAction</name>
                <newname>eval_v/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void(System.Action, int32)</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Execute</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Action</signature>
                        <name>_action</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>int32</signature>
                        <name>_delayTime</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_c</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.FileSystem</name>
                <methodlist>
                    <method>
                        <signature>bool(string)</signature>
                        <name>IsValidDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.Utility.SystemInfo</name>
                <newname>eval_u</newname>
                <methodlist>
                    <method>
                        <signature>string(string)</signature>
                        <name>GetSystemInfo</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string(string, string)</signature>
                        <name>RunQuery</name>
                        <newname>eval_a</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>bool</signature>
                        <name>UseBaseBoardManufacturer</name>
                        <newname>eval_c</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseBaseBoardProduct</name>
                        <newname>eval_b</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseBiosManufacturer</name>
                        <newname>eval_h</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseBiosVersion</name>
                        <newname>eval_g</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseDiskDriveSignature</name>
                        <newname>eval_d</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UsePhysicalMediaSerialNumber</name>
                        <newname>eval_f</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseProcessorID</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseVideoControllerCaption</name>
                        <newname>eval_e</newname>
                    </field>
                    <field>
                        <signature>bool</signature>
                        <name>UseWindowsSerialNumber</name>
                        <newname>eval_i</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_j</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsSecurity.AccessHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.IO.DirectoryInfo)</signature>
                        <name>UserHasReadAccessToDirectory</name>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.Principal.WindowsIdentity</signature>
                        <name>_winId</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsSecurity.AccessHelper/&lt;&gt;c__DisplayClass2</name>
                <newname>GeneralToolkitLib.WindowsSecurity.AccessHelper/eval_a</newname>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>bool(System.Security.Claims.Claim)</signature>
                        <name>&lt;UserHasReadAccessToDirectory&gt;b__0</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>System.Security.AccessControl.FileSystemAccessRule</signature>
                        <name>fsAccessRules</name>
                        <newname>eval_a</newname>
                    </field>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_b</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
            <type>
                <name>GeneralToolkitLib.WindowsSecurity.WindowsIdentityHelper</name>
                <methodlist>
                    <method>
                        <signature>void()</signature>
                        <name>.ctor</name>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>GetAnonymousUser</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>string()</signature>
                        <name>GetUniqueSecurityIdForCurrentUser</name>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>ImpersonateIdentity</name>
                        <newname>eval_a</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPrtStringTypeBoolConstructor</name>
                        <newname>eval_c</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPtrConstructor</name>
                        <newname>eval_f</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPtrStringConstructor</name>
                        <newname>eval_e</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>IntPtrStringTypeConstructor</name>
                        <newname>eval_d</newname>
                    </method>
                    <method>
                        <signature>native int()</signature>
                        <name>LogonUser</name>
                        <newname>eval_b</newname>
                    </method>
                    <method>
                        <signature>void()</signature>
                        <name>Main</name>
                        <newname>c</newname>
                    </method>
                    <method>
                        <signature>void(native int)</signature>
                        <name>UseProperties</name>
                        <newname>eval_b</newname>
                    </method>
                </methodlist>
                <fieldlist>
                    <field>
                        <signature>string</signature>
                        <name>qbgshfpngbe.VafgnaprSvryq</name>
                        <newname>eval_a</newname>
                    </field>
                </fieldlist>
                <propertylist />
                <eventlist />
            </type>
        </module>
    </mapping>
    <statistics>
        <statisticline>
            <description>Total Classes</description>
            <statistic>286</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods</description>
            <statistic>1420</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields</description>
            <statistic>1263</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties</description>
            <statistic>230</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events</description>
            <statistic>5</statistic>
        </statisticline>
        <statisticline>
            <description>Total Classes Renamed</description>
            <statistic>112</statistic>
            <statistic>39,16 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Methods Renamed</description>
            <statistic>574</statistic>
            <statistic>40,42 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Fields Renamed</description>
            <statistic>1083</statistic>
            <statistic>85,75 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Properties Renamed</description>
            <statistic>46</statistic>
            <statistic>20,00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Total Events Renamed</description>
            <statistic>0</statistic>
            <statistic>0,00 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_a'</description>
            <statistic>248</statistic>
            <statistic>17,46 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_b'</description>
            <statistic>91</statistic>
            <statistic>6,41 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_c'</description>
            <statistic>52</statistic>
            <statistic>3,66 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_d'</description>
            <statistic>34</statistic>
            <statistic>2,39 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_e'</description>
            <statistic>30</statistic>
            <statistic>2,11 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'a'</description>
            <statistic>23</statistic>
            <statistic>1,62 %</statistic>
        </statisticline>
        <statisticline>
            <description>Methods Renamed to 'eval_f'</description>
            <statistic>16</statistic>
            <statistic>1,13 %</statistic>
        </statisticline>
    </statistics>
</dotfuscatorMap>